{"version":3,"sources":["services/auth.tsx","components/button.tsx","components/navbar.tsx","components/datepicker.tsx","components/icon.tsx","components/input.tsx","components/formfield.tsx","models/certificate.tsx","models/contact.tsx","models/department.tsx","models/education.tsx","models/kind.tsx","models/post.tsx","models/practice.tsx","models/rank.tsx","models/scope.tsx","models/siren.tsx","models/sirentype.tsx","services/fetcher.ts","components/select.tsx","models/company.tsx","services/utils.tsx","models/impersonal.tsx","containers/Certificate/item.tsx","components/pagination.tsx","components/table.tsx","containers/Certificate/list.tsx","containers/Company/item.tsx","containers/Company/list.tsx","containers/Contact/item.tsx","containers/Contact/list.tsx","containers/Department/item.tsx","containers/Department/list.tsx","containers/Education/item.tsx","containers/Education/list.tsx","containers/Home/index.tsx","containers/Kind/item.tsx","containers/Kind/list.tsx","containers/Login/index.tsx","containers/Post/item.tsx","containers/Post/list.tsx","containers/Practice/item.tsx","containers/Practice/list.tsx","containers/Rank/item.tsx","containers/Rank/list.tsx","containers/Scope/item.tsx","containers/Scope/list.tsx","containers/Siren/item.tsx","containers/Siren/list.tsx","containers/SirenType/item.tsx","containers/SirenType/list.tsx","components/routes.tsx","rego.tsx","reportWebVitals.ts","index.tsx"],"names":["loginURL","process","REACT_APP_LOGINURL","checkURL","REACT_APP_CHECKURL","initialAuthState","user","role","name","token","login","check","initialSetAuthState","dispatch","AuthContext","createContext","SetAuthContext","getStorage","userStorage","localStorage","getItem","u","JSON","parse","clearStorage","removeItem","reducer","authState","action","type","data","setItem","stringify","AuthProvider","properties","children","initState","useReducer","state","setState","Provider","value","useAuthState","auth","useContext","setAuth","Button","className","disabled","href","onClick","classes","mainItems","link","dropdownItems","NavbarNotLogged","to","MainItems","map","item","activeClassName","setter","NavbarDropdown","NavBarStart","NavbarEnd","BrandBar","open","exact","aria-expanded","aria-label","data-target","aria-hidden","NavBar","useState","setOpen","id","listDays","date","days","getDate","list","i","push","toString","length","listYears","currentYear","Date","getFullYear","DatePicker","label","year","setYear","month","setMonth","day","setDay","rawDate","setRawDate","useEffect","values","split","strdate","undefined","htmlFor","onChange","event","target","onBlur","Number","Icon","color","position","icon","spanClasses","Input","autocomplete","classNameDiv","iconRight","onKeyPress","placeholder","readonly","divClasses","autoComplete","defaultValue","readOnly","defaultProps","FormField","CertificateEmpty","CertificateNumberInput","CertificateDateInput","ContactEmpty","ContactNameInput","ContactBirthdayInput","ContactShortForm","history","useHistory","contacts","contact","index","post_name","ContactIDSelect","listName","ContactEducations","educations","education","DepartmentEmpty","DepartmentIDSelect","DepartmentNameInput","EducationEmpty","EducationNameSelect","EducationStartDateInput","EducationEndDateInput","KindEmpty","KindNameInput","KindShortNameInput","KindIDSelect","PostEmpty","PostIDSelect","PostGoIDSelect","PostNameInput","PostGOSwitch","checked","PracticeEmpty","PracticeListForm","practices","practice","date_str","kind_name","topic","PracticeTopicInput","PracticeDateInput","RankEmpty","RankIDSelect","RankNameInput","ScopeEmpty","ScopeIDSelect","ScopeNameInput","SirenEmpty","SirenNumberIDInput","SirenNumberPassportInput","SirenRadioInput","SirenDeskInput","SirenLatitudeInput","SirenLongtitudeInput","SirenStageInput","SirenOwnInput","SirenTypeEmpty","SirenTypeIDSelect","SirenTypeNameInput","SirenTypeRadiusInput","URL","REACT_APP_JSONURL","GetItem","setData","NumberID","fetch","method","mode","headers","body","then","response","json","jsonData","command","object","Certificate","Company","Contact","Department","Education","Kind","Post","Practice","Rank","Scope","Siren","SirenType","CompanyEmpty","GetList","setList","CertificateList","CompanyList","ContactList","DepartmentList","EducationList","EducationShort","KindList","PostList","PracticeList","PracticeShort","RankList","ScopeList","SirenList","SirenTypeList","SetItem","status","catch","DelItem","Select","opened","setOpened","itemID","setItemID","setSelect","error","setError","SelectItem","GetSelect","setValue","unshift","currentItem","find","currentValue","aria-controls","aria-haspopup","onFocus","setTimeout","inputValue","trim","inputArray","filter","listItem","every","listItemValue","RegExp","exec","filteredList","ListItem","onMouseDown","tabIndex","CompanyIDSelect","CompanyNameInput","filterArrayString","filterArrayNumber","addEmptyString","numberToString","splitNumbers","items","arrayItem","EmailInputs","emails","email","PhoneInputs","phones","phone","FaxInputs","fax","NoteInput","AddressInput","ItemFormButtons","send","del","SaveButton","BackButton","go","DeleteButton","window","confirm","CertificateItem","useParams","sNumber","setSNumber","contactID","setContactID","companyID","setCompanyID","certDate","setCertDate","note","setNote","setStatus","num","contact_id","company_id","cert_date","Pagination","currentPage","lastPage","Previous","Next","Item","itemProperties","ellipsis","initialArguments","filteredData","filteredDataLength","itemsPerPage","searchValues","valueLength","searchArray","search","toLowerCase","temporaryFilteredData","_","includes","temporaryFilteredLength","Math","ceil","Paginate","Data","sv","row","Object","Array","isArray","join","slice","page","Bar","CreateButton","Certificates","setSearch","paginationData","Body","certificate","contact_name","company_name","CompanyItem","setName","address","setAddress","scopeID","setScopeID","setEmails","setPhones","faxes","setFaxes","setPractices","setContacts","scope_id","company","Companies","scope_name","ContactItem","departmentID","setDepartmentID","postID","setPostID","postGoID","setPostGoID","rankID","setRankID","birthday","setBirthday","setEducations","department_id","post_id","post_go_id","rank_id","Contacts","DepartmentItem","Departments","department","EducationItem","startDate","setStartDate","endDate","setEndDate","start_date","end_date","Educations","start_str","end_str","trClass","m","d","getMonth","tinyDate","EducationTable","PracticeTable","date_of_practice","kind_id","kind_short_name","Home","KindItem","shortName","setShortName","short_name","Kinds","kind","Login","pass","setPass","submit","p","btoa","r","t","onSubmit","preventDefault","key","PostItem","setGo","Posts","post","PracticeItem","kindID","setKindID","setTopic","setDate","Practices","RankItem","Ranks","rank","ScopeItem","Scopes","scope","SirenItem","numberID","setNumberID","numberPassport","setNumberPassport","sirenTypeID","setSirenTypeID","radio","setRadio","desk","setDesk","latitude","setLatitude","longitude","setLongitude","stage","setStage","own","setOwn","num_id","num_pass","siren_type_id","Sirens","siren","siren_type_name","SirenTypeItem","radius","setRadius","SirenTypes","siren_type","Router","fallback","path","component","Rego","checker","setChecker","setLogin","checkStorage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootNode","document","getElementById","App","StrictMode","ReactDOM","render"],"mappings":"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","file":"static/js/main.df9ef619.chunk.js","sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  ReactElement,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useReducer,\n} from 'react';\n\nconst loginURL = process.env.REACT_APP_LOGINURL || '/go/login';\nconst checkURL = process.env.REACT_APP_CHECKURL || '/go/check';\n\nexport type User = {\n  role: number;\n  name: string;\n  token: string;\n};\n\nexport type AuthState = {\n  user: User;\n  login: boolean;\n  check: boolean;\n};\n\nexport interface CJson {\n  r: boolean;\n}\n\nconst initialAuthState: AuthState = {\n  user: { role: 0, name: '', token: '' },\n  login: false,\n  check: false,\n};\n\nexport type ReducerActions =\n  | {\n      type: 'SetAuth';\n      data: AuthState;\n    }\n  | {\n      type: 'ClearAuth';\n    }\n  | {\n      type: 'SetLogin';\n      data: boolean;\n    }\n  | {\n      type: 'Checked';\n    }\n  | {\n      type: 'Unchecked';\n    };\n\ninterface SetAuthState {\n  dispatch: Dispatch<ReducerActions>;\n}\n\ninterface TJson {\n  t: string;\n  r: number;\n}\n\nconst initialSetAuthState: SetAuthState = {\n  dispatch: () => {\n    return true;\n  },\n};\n\nexport const login = (name: string, pass: string, setAuth: Dispatch<ReducerActions>): void => {\n  fetch(loginURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ u: name, p: btoa(pass) }),\n  })\n    .then((response) => response.json())\n    .then((response) => response as TJson)\n    .then((jsonData) => {\n      setAuth({\n        type: 'SetAuth',\n        data: {\n          user: {\n            role: jsonData.r,\n            name,\n            token: jsonData.t,\n          },\n          check: true,\n          login: true,\n        },\n      });\n    });\n};\n\nexport const check = (token: string, role: string): void => {\n  fetch(checkURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ t: token, r: role }),\n  })\n    .then((response) => response.json())\n    .then((response) => response as CJson)\n    .then((jsonData) => {\n      return jsonData.r;\n    });\n};\n\nexport const logout = (): void => {\n  clearStorage();\n};\n\nexport const AuthContext = createContext(initialAuthState);\n\nexport const SetAuthContext = createContext(initialSetAuthState);\n\ninterface AuthProviderProperties {\n  children: ReactNode;\n}\n\nexport const getStorage = (): User => {\n  const userStorage: string | null = localStorage.getItem('user');\n  const user: User = { role: 0, name: '', token: '' };\n  if (userStorage) {\n    const u: User | undefined = JSON.parse(userStorage);\n    if (u) {\n      user.name = u.name;\n      user.role = u.role;\n      user.token = u.token;\n    }\n  }\n  return user;\n};\n\nconst setStorage = (user: User): void => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nconst clearStorage = (): void => {\n  localStorage.removeItem('user');\n};\n\nexport const reducer = (authState: AuthState, action: ReducerActions): AuthState => {\n  switch (action.type) {\n    case 'SetAuth': {\n      setStorage(action.data.user);\n      return {\n        user: action.data.user,\n        login: action.data.login,\n        check: action.data.check,\n      };\n    }\n    case 'ClearAuth': {\n      clearStorage();\n      return {\n        user: { role: 0, name: '', token: '' },\n        login: false,\n        check: true,\n      };\n    }\n    case 'SetLogin': {\n      return {\n        ...authState,\n        login: action.data,\n        check: true,\n      };\n    }\n    case 'Checked': {\n      return {\n        ...authState,\n        check: true,\n      };\n    }\n    case 'Unchecked': {\n      return {\n        ...authState,\n        check: false,\n      };\n    }\n    default:\n      return authState;\n  }\n};\n\nexport const AuthProvider = (properties: AuthProviderProperties): ReactElement => {\n  const { children } = properties;\n\n  const user = getStorage();\n  const initState: AuthState = {\n    user,\n    login: false,\n    check: false,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const setState: SetAuthState = { dispatch };\n\n  // const contentValues = useMemo(\n  //   () => ({\n  //     state,\n  //     dispatch,\n  //   }),\n  //   [state, dispatch],\n  // );\n\n  return (\n    <AuthContext.Provider value={state}>\n      <SetAuthContext.Provider value={setState}>{children}</SetAuthContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\ninterface AuthContextProperties {\n  auth: AuthState;\n  setAuth: Dispatch<ReducerActions>;\n}\n\nexport const useAuthState = (): AuthContextProperties => {\n  const auth = useContext(AuthContext);\n  const setter = useContext(SetAuthContext);\n  return { auth, setAuth: setter.dispatch };\n};\n\nexport const checkStorage = (\n  setChecker: Dispatch<SetStateAction<boolean>>,\n  setLogin: Dispatch<SetStateAction<boolean>>,\n): void => {\n  const user = getStorage();\n\n  fetch(checkURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{ \"t\": \"${user.token}\", \"r\": ${user.role} }`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as CJson)\n    .then((jsonData) => {\n      if (jsonData.r) {\n        setLogin(true);\n        setChecker(true);\n      } else {\n        setLogin(false);\n        setChecker(true);\n      }\n    });\n};\n","import React, { MouseEvent } from 'react';\n\ninterface ButtonProperties {\n  children?: string;\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: (\n    event: MouseEvent<\n      HTMLAnchorElement | HTMLButtonElement | HTMLInputElement,\n      globalThis.MouseEvent\n    >,\n  ) => void;\n}\n\nexport const Button = (properties: ButtonProperties): JSX.Element => {\n  const { children, className, disabled, href, onClick } = properties;\n  const classes = `button ${className || ''}`;\n\n  return href ? (\n    <a href={href} onClick={onClick} className={classes}>\n      {children}\n    </a>\n  ) : (\n    <button type=\"button\" disabled={disabled} onClick={onClick} className={classes}>\n      {children}\n    </button>\n  );\n};\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuthState } from '../services/auth';\nimport { Button } from './button';\n\ninterface Setter {\n  setter: (value: boolean) => void;\n}\n\ninterface OpenState {\n  open: boolean;\n  setter: (value: boolean) => void;\n}\n\nconst mainItems = [\n  { link: '/contacts', name: 'Контакты' },\n  { link: '/companies', name: 'Организации' },\n  { link: '/sirens', name: 'Сирены' },\n];\n\nconst dropdownItems = [\n  { link: '/departments', name: 'Отделы' },\n  { link: '/educations', name: 'Обучение' },\n  { link: '/kinds', name: 'Типы тренировок' },\n  { link: '/posts', name: 'Должности' },\n  { link: '/practices', name: 'Учения' },\n  { link: '/ranks', name: 'Чины' },\n  { link: '/scopes', name: 'Сферы' },\n  { link: '/certificates', name: 'Удостоверения' },\n  { link: '/sirentypes', name: 'Типы сирен' },\n];\n\nconst NavbarNotLogged = (): JSX.Element => (\n  <nav className=\"navbar is-dark\" role=\"navigation\">\n    <div className=\"navbar-brand\">\n      <NavLink className=\"navbar-item\" key=\"NavbarNotLogged\" to=\"/login\">\n        Авторизация\n      </NavLink>\n    </div>\n  </nav>\n);\n\nconst MainItems = (value: Setter): JSX.Element => (\n  <>\n    {mainItems.map((item) => (\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"navbar-item\"\n        to={item.link}\n        key={`main-items-${item.name}`}\n        onClick={() => value.setter(false)}\n      >\n        {item.name}\n      </NavLink>\n    ))}\n  </>\n);\n\nconst NavbarDropdown = (value: Setter): JSX.Element => (\n  <div className=\"navbar-dropdown\" key=\"navbar-dropdown\">\n    {dropdownItems.map((item) => (\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"navbar-item\"\n        to={item.link}\n        key={`navbar-dropdown-${item.name}`}\n        onClick={() => value.setter(false)}\n      >\n        {item.name}\n      </NavLink>\n    ))}\n  </div>\n);\n\nconst NavBarStart = (value: Setter): JSX.Element => (\n  <div className=\"navbar-start\" key=\"navbar-start\">\n    <MainItems setter={value.setter} />\n    <div className=\"navbar-item has-dropdown is-hoverable\" key=\"dropdown-items\">\n      <a href=\"#directory\" className=\"navbar-link\">\n        Справочники\n      </a>\n      <NavbarDropdown setter={value.setter} />\n    </div>\n  </div>\n);\n\nconst NavbarEnd = (): JSX.Element => {\n  const { auth, setAuth } = useAuthState();\n  return (\n    <div className=\"navbar-end\" key=\"navbar-end\">\n      <div className=\"navbar-item has-dropdown is-hoverable\">\n        <a href=\"#user\" className=\"navbar-link\">\n          {auth.user.name}\n        </a>\n        <div className=\"navbar-dropdown is-right\">\n          <div className=\"navbar-item\">\n            <Button\n              className=\"is-link\"\n              onClick={() => {\n                setAuth({ type: 'ClearAuth' });\n              }}\n            >\n              Выход\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BrandBar = (properties: OpenState): JSX.Element => {\n  const { open, setter } = properties;\n  return (\n    <>\n      <NavLink activeClassName=\"is-active\" className=\"navbar-item\" exact to=\"/\">\n        ЕДДС\n      </NavLink>\n      <a\n        aria-expanded=\"false\"\n        aria-label=\"menu\"\n        className={open ? 'navbar-burger is-active' : 'navbar-burger'}\n        data-target=\"navbarData\"\n        role=\"button\"\n        href=\"#button\"\n        onClick={() => setter(!open)}\n      >\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n      </a>\n    </>\n  );\n};\n\nexport const NavBar = (): JSX.Element => {\n  // const openClassName = (cn: string): string => (open ? `${cn} is-active` : cn);\n  const { auth } = useAuthState();\n  const [open, setOpen] = useState(false);\n\n  return auth.user.role > 0 ? (\n    <nav className=\"navbar is-dark\" role=\"navigation\" aria-label=\"dropdown navigation\">\n      <div className=\"navbar-brand\">\n        <BrandBar open={open} setter={setOpen} />\n      </div>\n      <div id=\"navbarData\" className={open ? 'navbar-menu is-active' : 'navbar-menu'}>\n        <NavBarStart setter={setOpen} />\n        <NavbarEnd />\n      </div>\n    </nav>\n  ) : (\n    <NavbarNotLogged />\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport interface DatePickerValues {\n  value?: string;\n  setter: (value?: string) => void;\n}\n\ninterface DatePickerProperties {\n  label?: string;\n  name: string;\n  setter: (value?: string) => void;\n  value?: string;\n}\n\ninterface DatePickerMonth {\n  value: string;\n  name: string;\n}\n\nconst listDays = (date: Date): string[] => {\n  const days = date.getDate();\n  const list = [' '];\n  for (let i = 1; i <= days; i += 1) {\n    list.push(i.toString().length === 1 ? `0${i}` : i.toString());\n  }\n  return list;\n};\n\nconst listMonths = (): DatePickerMonth[] => {\n  const list = [\n    { value: ' ', name: ' ' },\n    { value: '01', name: 'января' },\n    { value: '02', name: 'февраля' },\n    { value: '03', name: 'марта' },\n    { value: '04', name: 'апреля' },\n    { value: '05', name: 'мая' },\n    { value: '06', name: 'июня' },\n    { value: '07', name: 'июля' },\n    { value: '08', name: 'августа' },\n    { value: '09', name: 'сентября' },\n    { value: '10', name: 'октября' },\n    { value: '11', name: 'ноября' },\n    { value: '12', name: 'декабря' },\n  ];\n  return list;\n};\n\nconst listYears = (): string[] => {\n  const currentYear = new Date().getFullYear();\n  const list = [' '];\n  for (let i = currentYear; i > currentYear - 100; i -= 1) {\n    list.push(i.toString());\n  }\n  return list;\n};\n\nexport const DatePicker = (properties: DatePickerProperties): JSX.Element => {\n  const { name, value, setter, label } = properties;\n\n  const [year, setYear] = useState(' ');\n  const [month, setMonth] = useState(' ');\n  const [day, setDay] = useState(' ');\n  const [rawDate, setRawDate] = useState('');\n\n  useEffect(() => {\n    if (value && value !== rawDate) {\n      const values = value.split('-');\n      if (values.length === 3) {\n        setRawDate(value);\n        setYear(values[0]);\n        setMonth(values[1]);\n        setDay(values[2]);\n      }\n    }\n  }, [rawDate, value]);\n\n  useEffect(() => {\n    const strdate = `${year}-${month}-${day}`;\n    if (strdate !== rawDate) {\n      setRawDate(strdate);\n      setter(year !== ' ' && month !== ' ' && day !== ' ' ? strdate : undefined);\n    }\n  }, [day, month, setter, rawDate, year]);\n\n  return (\n    <div className=\"field\" key={name}>\n      {label && (\n        <label className=\"label\" key=\"DateLabel\" htmlFor={`datepicker-${name}-id`}>\n          {label}\n        </label>\n      )}\n      <div className=\"field has-addons\" id={`datepicker-${name}-id`}>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={day}\n              key={`${name}day`}\n              onChange={(event) => setDay(event.target.value)}\n              onBlur={(event) => setDay(event.target.value)}\n            >\n              {listDays(\n                new Date(\n                  Number(year === ' ' ? '2021' : year),\n                  Number(month === ' ' ? '1' : month),\n                  0,\n                ),\n              ).map((item) => (\n                <option key={`${name}day-${item}`} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={month}\n              key={`${name}month`}\n              onChange={(event) => setMonth(event.target.value)}\n              onBlur={(event) => setMonth(event.target.value)}\n            >\n              {listMonths().map((item) => (\n                <option key={`${name}month-${item.value}`} value={item.value}>\n                  {item.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={year}\n              key={`${name}year`}\n              onChange={(event) => setYear(event.target.value)}\n              onBlur={(event) => setYear(event.target.value)}\n            >\n              {listYears().map((item) => (\n                <option key={`${name}year-${item}`} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface IconProperties {\n  children?: Element;\n  className?: string;\n  color?: 'info' | 'success' | 'warning' | 'danger';\n  icon: string;\n  position?: 'left' | 'right';\n}\n\nexport const Icon = (properties: IconProperties): JSX.Element => {\n  const { children, className, color, position, icon } = properties;\n  const spanClasses = `icon ${className || ''} ${color ? `has-text-${color}` : ''} ${\n    position ? `is-${position}` : ''\n  }`;\n\n  return (\n    <span className={spanClasses}>\n      <i className={`fas fa-${icon}`}>{children}</i>\n    </span>\n  );\n};\n","import React, { ChangeEvent, KeyboardEvent, MouseEvent } from 'react';\n\nimport { Icon } from './icon';\n\nexport interface StringInputProperties {\n  value?: string;\n  setter: (value?: string) => void;\n}\n\nexport interface NumberInputProperties {\n  value?: number;\n  setter: (value?: number) => void;\n}\n\nexport interface BooleanInputProperties {\n  value: boolean;\n  setter: (value: boolean) => void;\n}\n\ninterface InputProperties {\n  autocomplete?: string;\n  className?: string;\n  classNameDiv?: string;\n  disabled?: boolean;\n  icon?: string;\n  iconRight?: string;\n  name: string;\n  onBlur?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onClick?: (event: MouseEvent<HTMLInputElement, globalThis.MouseEvent>) => void;\n  onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  readonly?: boolean;\n  type?: 'text' | 'password' | 'email' | 'tel';\n  value?: number | string;\n}\n\nexport const Input = (properties: InputProperties): JSX.Element => {\n  const {\n    autocomplete,\n    className,\n    classNameDiv,\n    disabled,\n    icon,\n    iconRight,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onKeyPress,\n    placeholder,\n    readonly,\n    type,\n    value,\n  } = properties;\n\n  const divClasses = `control ${classNameDiv || ''} ${icon ? 'has-icons-left' : ''} ${\n    iconRight ? 'has-icons-right' : ''\n  }`;\n\n  return (\n    <div className={divClasses}>\n      <input\n        autoComplete={autocomplete}\n        className={`${className || ''} input`}\n        defaultValue={value}\n        disabled={disabled}\n        id={name}\n        key={name}\n        name={name}\n        onBlur={onBlur}\n        onChange={onChange}\n        onClick={onClick}\n        onKeyPress={onKeyPress}\n        placeholder={placeholder}\n        readOnly={readonly}\n        type={type}\n      />\n      {icon && <Icon position=\"left\" icon={icon} />}\n      {iconRight && <Icon position=\"right\" icon={iconRight} />}\n    </div>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n","import React, { ChangeEvent, KeyboardEvent, MouseEvent } from 'react';\n\nimport { Input } from './input';\n\nexport interface FormFieldProperties {\n  autocomplete?: string;\n  className?: string;\n  disabled?: boolean;\n  icon?: string;\n  iconRight?: string;\n  label?: string;\n  name: string;\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onClick?: (event: MouseEvent<HTMLInputElement, globalThis.MouseEvent>) => void;\n  onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  readonly?: boolean;\n  rounded?: boolean;\n  type?: 'text' | 'password' | 'email' | 'tel';\n  value?: number | string;\n}\n\nexport const FormField = (properties: FormFieldProperties): JSX.Element => {\n  const {\n    autocomplete,\n    className,\n    disabled,\n    icon,\n    iconRight,\n    label,\n    name,\n    onChange,\n    onClick,\n    onKeyPress,\n    placeholder,\n    readonly,\n    type,\n    value,\n  } = properties;\n\n  return (\n    <div className=\"field\">\n      {label && (\n        <label className=\"label\" htmlFor={name}>\n          {label}\n        </label>\n      )}\n      <Input\n        autocomplete={autocomplete}\n        className={className}\n        disabled={disabled}\n        icon={icon}\n        iconRight={iconRight}\n        name={name}\n        onChange={onChange}\n        onClick={onClick}\n        onKeyPress={onKeyPress}\n        placeholder={placeholder}\n        readonly={readonly}\n        type={type}\n        value={value}\n      />\n    </div>\n  );\n};\n\nFormField.defaultProps = {\n  type: 'text',\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\n\nexport type Certificate = {\n  id: number;\n  num?: string;\n  contact_id?: number;\n  company_id?: number;\n  cert_date?: string;\n  note?: string;\n};\n\nexport const CertificateEmpty: Certificate = {\n  id: 0,\n};\n\nexport type CertificateList = {\n  id: number;\n  num?: string;\n  contact_id?: number;\n  contact_name?: string;\n  company_id?: number;\n  company_name?: string;\n  cert_date?: string;\n  note?: string;\n};\n\nexport const CertificateNumberInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"num\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Серийный номер удостоверения\"\n    icon=\"tag\"\n  />\n);\n\nexport const CertificateDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"cert-date\"\n    label=\"Дата выдачи\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport interface ContactShortValues {\n  contacts: ContactShort[];\n}\n\nexport interface ContactEducationsValues {\n  educations: string[];\n}\n\nexport type Contact = {\n  id: number;\n  name?: string;\n  company_id?: number;\n  department_id?: number;\n  post_id?: number;\n  post_go_id?: number;\n  rank_id?: number;\n  birthday?: string;\n  note?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  educations?: string[];\n};\n\nexport const ContactEmpty: Contact = {\n  id: 0,\n};\n\nexport type ContactList = {\n  id: number;\n  name?: string;\n  company_id?: number;\n  company_name?: string;\n  post_name?: string;\n  phones?: number[];\n  faxes?: number[];\n};\n\nexport type ContactShort = {\n  id: number;\n  name?: string;\n  department_name?: string;\n  post_name?: string;\n  post_go_name?: string;\n};\n\nexport const ContactNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    icon=\"user\"\n    label=\"Фамилия Имя Отчество\"\n    name=\"name\"\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    value={properties.value}\n  />\n);\n\nexport const ContactBirthdayInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    label=\"Дата рождения\"\n    name=\"birthday\"\n    setter={properties.setter}\n    value={properties.value}\n  />\n);\n\nexport const ContactShortForm = (properties: ContactShortValues): JSX.Element => {\n  const history = useHistory();\n  return (\n    <div className=\"field\" key=\"contacts\">\n      <label className=\"label\" htmlFor=\"contact-1\">\n        Сотрудники\n      </label>\n      {properties.contacts.map((contact, index) => (\n        <Input\n          className=\"link\"\n          classNameDiv=\"pb-1\"\n          icon=\"user\"\n          key={`contact-${index}`}\n          name={`contact-${index}`}\n          onClick={(): void => history.push(`/contacts/${contact.id}`)}\n          readonly\n          value={`${contact.name || ''} - ${contact.post_name || ''}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const ContactIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    icon=\"user\"\n    id={properties.id}\n    label=\"Фамилия Имя Отчество\"\n    listName=\"ContactSelect\"\n    name=\"contact\"\n    setter={properties.setter}\n  />\n);\n\nexport const ContactEducations = (properties: ContactEducationsValues): JSX.Element =>\n  properties.educations.length > 0 ? (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor=\"education-1-input\">\n        Даты обучения в УМЦ\n      </label>\n      {properties.educations.map((education, index) => (\n        <Input\n          name={`education-${index}-input`}\n          key={`education-${index}`}\n          value={education}\n          classNameDiv=\"pb-1\"\n        />\n      ))}\n    </div>\n  ) : (\n    <></>\n  );\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Department = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const DepartmentEmpty: Department = {\n  id: 0,\n};\n\nexport type DepartmentList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const DepartmentIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"department\"\n    label=\"Отдел\"\n    listName=\"DepartmentSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const DepartmentNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование отдела\"\n    icon=\"tag\"\n  />\n);\n","import React from 'react';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Education = {\n  id: number;\n  contact_id?: number;\n  start_date?: string;\n  end_date?: string;\n  post_id?: number;\n  note?: string;\n};\n\nexport const EducationEmpty: Education = {\n  id: 0,\n};\n\nexport type EducationList = {\n  id: number;\n  contact_id?: number;\n  contact_name?: string;\n  start_date?: string;\n  end_date?: string;\n  start_str?: string;\n  end_str?: string;\n  post_id?: number;\n  post_name?: string;\n  note?: string;\n};\n\nexport type EducationShort = {\n  id: number;\n  contact_id: number;\n  contact_name: string;\n  start_date: string;\n};\n\nexport const EducationNameSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"education-contact-name\"\n    label=\"Полное имя обучаемого\"\n    listName=\"ContactSelect\"\n    id={properties.id}\n    icon=\"user\"\n    setter={properties.setter}\n  />\n);\n\nexport const EducationStartDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"education-start-date\"\n    label=\"Дата начала обучения\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n\nexport const EducationEndDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"education-end-date\"\n    label=\"Дата окончания обучения\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Kind = {\n  id: number;\n  name?: string;\n  short_name?: string;\n  note?: string;\n};\n\nexport const KindEmpty: Kind = {\n  id: 0,\n};\n\nexport type KindList = {\n  id: number;\n  name?: string;\n  short_name?: string;\n  note?: string;\n};\n\nexport const KindNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"kind-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование типа тренировки\"\n    icon=\"tag\"\n  />\n);\n\nexport const KindShortNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"kind-short-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Сокращенное наименование\"\n    icon=\"tag\"\n  />\n);\n\nexport const KindIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"kink-select\"\n    label=\"Тип тренировки\"\n    listName=\"KindSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { BooleanInputProperties, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Post = {\n  id: number;\n  name?: string;\n  go?: boolean;\n  note?: string;\n};\n\nexport const PostEmpty: Post = {\n  id: 0,\n};\n\nexport type PostList = {\n  id: number;\n  name?: string;\n  go?: boolean;\n  note?: string;\n};\n\nexport const PostIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"post\"\n    label=\"Должность\"\n    listName=\"PostSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const PostGoIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"post-go\"\n    label=\"Должность ГО ЧС\"\n    listName=\"PostGoSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const PostNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"post-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование должности\"\n    icon=\"tag\"\n  />\n);\n\nexport const PostGOSwitch = (properties: BooleanInputProperties): JSX.Element => (\n  <div className=\"field\">\n    <div className=\"control\">\n      <label className=\"checkbox\" htmlFor=\"post-go\">\n        <input\n          className=\"checkbox\"\n          type=\"checkbox\"\n          name=\"post-go\"\n          id=\"post-go\"\n          checked={properties.value}\n          onClick={() => properties.setter(!properties.value)}\n        />\n        Должность по гражданской обороне\n      </label>\n    </div>\n  </div>\n);\n","import React, { ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\n\nexport interface PracticeValues {\n  practices: PracticeList[];\n}\n\nexport type Practice = {\n  id: number;\n  company_id?: number;\n  kind_id?: number;\n  topic?: string;\n  date_of_practice?: string;\n  note?: string;\n};\n\nexport const PracticeEmpty: Practice = {\n  id: 0,\n};\n\nexport type PracticeList = {\n  id: number;\n  company_id?: number;\n  company_name?: string;\n  kind_id?: number;\n  kind_name?: string;\n  kind_short_name?: string;\n  topic?: string;\n  date_of_practice?: string;\n  date_str?: string;\n};\n\nexport type PracticeShort = {\n  id: number;\n  company_id: number;\n  company_name: string;\n  kind_id: number;\n  kind_short_name: string;\n  date_of_practice: string;\n};\n\nexport const PracticeListForm = (properties: PracticeValues): JSX.Element => {\n  const history = useHistory();\n  return properties.practices.length > 0 ? (\n    <div className=\"field\" key=\"practices\">\n      <label className=\"label\" htmlFor=\"practice-1\">\n        Тренировки\n      </label>\n      {properties.practices.map((practice, index) => (\n        <Input\n          name={`practice-${index}`}\n          key={`practice-${index}`}\n          onClick={(): void => history.push(`/practices/${practice.id}`)}\n          value={`${practice.date_str || ''} - ${practice.kind_name || ''} - ${\n            practice.topic || ''\n          }`}\n          readonly\n          classNameDiv=\"pb-1\"\n          className=\"link\"\n        />\n      ))}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport const PracticeTopicInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"practice-topic\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Тема тренировки\"\n    icon=\"tag\"\n  />\n);\n\nexport const PracticeDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"practice-date\"\n    label=\"Дата проведения тренировки\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Rank = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const RankEmpty: Rank = {\n  id: 0,\n};\n\nexport type RankList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const RankIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    icon=\"tag\"\n    id={properties.id}\n    label=\"Чин\"\n    listName=\"RankSelect\"\n    name=\"rank\"\n    setter={properties.setter}\n  />\n);\n\nexport const RankNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    icon=\"tag\"\n    label=\"Наименование чина\"\n    name=\"name\"\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    value={properties.value}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Scope = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const ScopeEmpty: Scope = {\n  id: 0,\n};\n\nexport type ScopeList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const ScopeIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"scope\"\n    label=\"Сфера деятельности\"\n    listName=\"ScopeSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const ScopeNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Сфера деятельности\"\n    icon=\"tag\"\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { NumberInputProperties, StringInputProperties } from '../components/input';\n\nexport type Siren = {\n  id: number;\n  num_id?: number;\n  num_pass?: string;\n  siren_type_id?: number;\n  address?: string;\n  radio?: string;\n  desk?: string;\n  contact_id?: number;\n  company_id?: number;\n  latitude?: string;\n  longitude?: string;\n  stage?: number;\n  own?: string;\n  note?: string;\n};\n\nexport const SirenEmpty: Siren = {\n  id: 0,\n};\n\nexport type SirenList = {\n  id: number;\n  siren_type_name?: string;\n  address?: string;\n  contact_name?: string;\n  phones?: number[];\n};\n\nexport const SirenNumberIDInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_number_id\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Инвентарный номер\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenNumberPassportInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_number_passport\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Номер по паспорту\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenRadioInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_radio\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Радио\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenDeskInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_desk\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Пульт управления\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenLatitudeInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_latitude\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Широта\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenLongtitudeInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_longtitude\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Долгота\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenStageInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_stage\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Этап\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenOwnInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_own\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Собственность\"\n    icon=\"tag\"\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { NumberInputProperties, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type SirenType = {\n  id: number;\n  name?: string;\n  radius?: number;\n  note?: string;\n};\n\nexport const SirenTypeEmpty: SirenType = {\n  id: 0,\n};\n\nexport type SirenTypeList = {\n  id: number;\n  name?: string;\n  radius?: number;\n  note?: string;\n};\n\nexport const SirenTypeIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"siren_type_id\"\n    label=\"Тип сирены\"\n    listName=\"SirenTypeSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const SirenTypeNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_type_name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Тип сирены\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenTypeRadiusInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_type_radius\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Радиус действия\"\n    icon=\"tag\"\n  />\n);\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nimport { Certificate, CertificateEmpty, CertificateList } from '../models/certificate';\nimport { Company, CompanyEmpty, CompanyList } from '../models/company';\nimport { Contact, ContactEmpty, ContactList } from '../models/contact';\nimport { Department, DepartmentEmpty, DepartmentList } from '../models/department';\nimport { Education, EducationEmpty, EducationList, EducationShort } from '../models/education';\nimport { Kind, KindEmpty, KindList } from '../models/kind';\nimport { Post, PostEmpty, PostList } from '../models/post';\nimport { Practice, PracticeEmpty, PracticeList, PracticeShort } from '../models/practice';\nimport { Rank, RankEmpty, RankList } from '../models/rank';\nimport { Scope, ScopeEmpty, ScopeList } from '../models/scope';\nimport { Siren, SirenEmpty, SirenList } from '../models/siren';\nimport { SirenType, SirenTypeEmpty, SirenTypeList } from '../models/sirentype';\nimport { useAuthState } from './auth';\n\nconst URL = process.env.REACT_APP_JSONURL || '/go/json';\n\nexport type SelectItem = {\n  id: number;\n  name: string;\n};\n\nexport type Item =\n  | undefined\n  | Certificate\n  | Company\n  | Contact\n  | Department\n  | Education\n  | Kind\n  | Post\n  | Practice\n  | Rank\n  | Scope\n  | Siren\n  | SirenType;\n\nexport type List =\n  | CertificateList\n  | CompanyList\n  | ContactList\n  | DepartmentList\n  | EducationList\n  | EducationShort\n  | KindList\n  | PostList\n  | PracticeList\n  | PracticeShort\n  | RankList\n  | ScopeList\n  | SirenList\n  | SirenTypeList;\n\ntype JsonListScheme =\n  | undefined\n  | {\n      command: 'Get';\n      name: 'CertificateList';\n      object: { CertificateList: CertificateList[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'CompanyList'; object: { CompanyList: CompanyList[] }; error: string }\n  | { command: 'Get'; name: 'CompanySelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'ContactList'; object: { ContactList: ContactList[] }; error: string }\n  | { command: 'Get'; name: 'ContactSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'DepartmentList';\n      object: { DepartmentList: DepartmentList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'DepartmentSelect';\n      object: { SelectItem: SelectItem[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'EducationList';\n      object: { EducationList: EducationList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'EducationNear';\n      object: { EducationShort: EducationShort[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'KindList'; object: { KindList: KindList[] }; error: string }\n  | { command: 'Get'; name: 'KindSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'PostGoSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'PostList'; object: { PostList: PostList[] }; error: string }\n  | { command: 'Get'; name: 'PostSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'PracticeList';\n      object: { PracticeList: PracticeList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'PracticeNear';\n      object: { PracticeShort: PracticeShort[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'RankList'; object: { RankList: RankList[] }; error: string }\n  | { command: 'Get'; name: 'RankSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'ScopeList'; object: { ScopeList: ScopeList[] }; error: string }\n  | { command: 'Get'; name: 'ScopeSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'SirenList'; object: { SirenList: SirenList[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'SirenTypeList';\n      object: { SirenTypeList: SirenTypeList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'SirenTypeSelect';\n      object: { SelectItem: SelectItem[] };\n      error: string;\n    };\n\ntype JsonItemScheme =\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Certificate'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Company'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Contact'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Department'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Education'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Kind'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Post'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Practice'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Rank'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Scope'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Siren'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'SirenType'; error: string };\n\ntype JsonGetItemScheme =\n  | { command: 'Get'; name: 'Certificate'; object: { Certificate: Certificate }; error: string }\n  | { command: 'Get'; name: 'Company'; object: { Company: Company }; error: string }\n  | { command: 'Get'; name: 'Contact'; object: { Contact: Contact }; error: string }\n  | { command: 'Get'; name: 'Department'; object: { Department: Department }; error: string }\n  | { command: 'Get'; name: 'Education'; object: { Education: Education }; error: string }\n  | { command: 'Get'; name: 'Kind'; object: { Kind: Kind }; error: string }\n  | { command: 'Get'; name: 'Post'; object: { Post: Post }; error: string }\n  | { command: 'Get'; name: 'Practice'; object: { Practice: Practice }; error: string }\n  | { command: 'Get'; name: 'Rank'; object: { Rank: Rank }; error: string }\n  | { command: 'Get'; name: 'Scope'; object: { Scope: Scope }; error: string }\n  | { command: 'Get'; name: 'Siren'; object: { Siren: Siren }; error: string }\n  | { command: 'Get'; name: 'SirenType'; object: { SirenType: SirenType }; error: string };\n\nexport const GetItem = (name: string, id: string): Item => {\n  const { auth } = useAuthState();\n  const [data, setData] = useState<Item>();\n\n  useEffect(() => {\n    const NumberID = Number(id);\n    if (NumberID !== 0) {\n      fetch(URL, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: `{\"command\":{\"Get\":{\"Item\":{\"name\":\"${name}\",\"id\":${NumberID}}}},\"addon\":\"${auth.user.token}\"}`,\n      })\n        .then((response) => response.json())\n        .then((response) => response as JsonGetItemScheme)\n        .then((jsonData) => {\n          if (jsonData?.command === 'Get') {\n            switch (jsonData?.name) {\n              case 'Certificate':\n                setData(jsonData.object.Certificate);\n                break;\n              case 'Company':\n                setData(jsonData.object.Company);\n                break;\n              case 'Contact':\n                setData(jsonData.object.Contact);\n                break;\n              case 'Department':\n                setData(jsonData.object.Department);\n                break;\n              case 'Education':\n                setData(jsonData.object.Education);\n                break;\n              case 'Kind':\n                setData(jsonData.object.Kind);\n                break;\n              case 'Post':\n                setData(jsonData.object.Post);\n                break;\n              case 'Practice':\n                setData(jsonData.object.Practice);\n                break;\n              case 'Rank':\n                setData(jsonData.object.Rank);\n                break;\n              case 'Scope':\n                setData(jsonData.object.Scope);\n                break;\n              case 'Siren':\n                setData(jsonData.object.Siren);\n                break;\n              case 'SirenType':\n                setData(jsonData.object.SirenType);\n                break;\n              // default:\n              //   throw new Error('unknown item');\n            }\n          }\n          // throw new Error('unknown item');\n        });\n    } else {\n      switch (name) {\n        case 'Certificate':\n          setData(CertificateEmpty);\n          break;\n        case 'Company':\n          setData(CompanyEmpty);\n          break;\n        case 'Contact':\n          setData(ContactEmpty);\n          break;\n        case 'Department':\n          setData(DepartmentEmpty);\n          break;\n        case 'Education':\n          setData(EducationEmpty);\n          break;\n        case 'Kind':\n          setData(KindEmpty);\n          break;\n        case 'Post':\n          setData(PostEmpty);\n          break;\n        case 'Practice':\n          setData(PracticeEmpty);\n          break;\n        case 'Rank':\n          setData(RankEmpty);\n          break;\n        case 'Scope':\n          setData(ScopeEmpty);\n          break;\n        case 'Siren':\n          setData(SirenEmpty);\n          break;\n        case 'SirenType':\n          setData(SirenTypeEmpty);\n          break;\n        // default:\n        //   throw new Error('unknown item');\n      }\n    }\n  }, [id, name, auth.user.token]);\n  return data;\n};\n\nexport const GetList = (name: string): List[] => {\n  const { auth } = useAuthState();\n  const [list, setList] = useState<List[]>([]);\n\n  useEffect(() => {\n    fetch(URL, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: `{\"command\":{\"Get\":{\"List\":\"${name}\"}},\"addon\":\"${auth.user.token}\"}`,\n    })\n      .then((response) => response.json())\n      .then((response) => response as JsonListScheme)\n      .then((jsonData) => {\n        if (jsonData?.command === 'Get') {\n          switch (jsonData?.name) {\n            case 'CertificateList':\n              setList(jsonData.object.CertificateList);\n              break;\n            case 'CompanyList':\n              setList(jsonData.object.CompanyList);\n              break;\n            case 'ContactList':\n              setList(jsonData.object.ContactList);\n              break;\n            case 'DepartmentList':\n              setList(jsonData.object.DepartmentList);\n              break;\n            case 'EducationList':\n              setList(jsonData.object.EducationList);\n              break;\n            case 'EducationNear':\n              setList(jsonData.object.EducationShort);\n              break;\n            case 'KindList':\n              setList(jsonData.object.KindList);\n              break;\n            case 'PostList':\n              setList(jsonData.object.PostList);\n              break;\n            case 'PracticeList':\n              setList(jsonData.object.PracticeList);\n              break;\n            case 'PracticeNear':\n              setList(jsonData.object.PracticeShort);\n              break;\n            case 'RankList':\n              setList(jsonData.object.RankList);\n              break;\n            case 'ScopeList':\n              setList(jsonData.object.ScopeList);\n              break;\n            case 'SirenList':\n              setList(jsonData.object.SirenList);\n              break;\n            case 'SirenTypeList':\n              setList(jsonData.object.SirenTypeList);\n              break;\n          }\n        }\n      });\n  }, [name, auth.user.token]);\n\n  return list;\n};\n\nexport const GetSelect = (name: string): [SelectItem[], string] => {\n  const { auth } = useAuthState();\n  const [list, setSelect] = useState<SelectItem[]>([{ id: 0, name: '' }]);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    fetch(URL, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: `{\"command\":{\"Get\":{\"List\":\"${name}\"}},\"addon\":\"${auth.user.token}\"}`,\n    })\n      .then((response) => response.json())\n      .then((response) => response as JsonListScheme)\n      .then((jsonData) => {\n        if (jsonData?.command === 'Get') {\n          switch (jsonData?.name) {\n            case 'CompanySelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'ContactSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'DepartmentSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'KindSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'PostSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'PostGoSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'RankSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'ScopeSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'SirenTypeSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            // default:\n            //   throw new Error('unknown select');\n          }\n          // } else {\n          //   throw new Error('unknown select');\n        }\n      })\n      .catch(() => {\n        return setError('unknown select');\n      });\n  }, [name, auth.user.token]);\n\n  return [list, error];\n};\n\nexport const SetItem = (\n  id: number,\n  name: string,\n  item: Item,\n  status: Dispatch<SetStateAction<boolean>>,\n  token: string,\n): void => {\n  fetch(URL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{ \"command\": { \"${id === 0 ? 'Insert' : 'Update'}\": { \"${name}\": ${JSON.stringify(\n      item,\n    )} } }, \"addon\": \"${token}\" }`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as JsonItemScheme)\n    .then((jsonData) => {\n      const command = id === 0 ? 'Insert' : 'Update';\n      if (jsonData?.command === command && jsonData.name === name) {\n        status(true);\n      }\n      return status(false);\n    })\n    .catch(() => {\n      return status(false);\n    });\n};\n\nexport const DelItem = (\n  id: number,\n  name: string,\n  status: Dispatch<SetStateAction<boolean>>,\n  token: string,\n): void => {\n  fetch(URL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{\"command\":{\"Delete\":{\"name\":\"${name}\",\"id\":${id}}},\"addon\":\"${token}\"}`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as JsonItemScheme)\n    .then((jsonData) => {\n      if (jsonData?.command === 'Delete' && jsonData.name === name) {\n        status(true);\n      }\n      return status(false);\n    })\n    .catch(() => {\n      return status(false);\n    });\n};\n","import './select.css';\n\nimport React, { ChangeEvent, useEffect, useState } from 'react';\n\nimport { GetSelect, SelectItem } from '../services/fetcher';\nimport { Icon } from './icon';\n\nexport interface SelectValues {\n  id?: number;\n  setter: (event?: number) => void;\n}\n\ninterface SelectProperties {\n  color?: 'primary' | 'info' | 'success' | 'warning' | 'danger';\n  icon?: string;\n  id?: number;\n  label?: string;\n  listName: string;\n  name: string;\n  setter: (event?: number) => void;\n}\n\nexport const Select = (properties: SelectProperties): JSX.Element => {\n  const { name, id, label, icon, color, listName, setter } = properties;\n\n  const [opened, setOpened] = useState(false);\n  const [itemID, setItemID] = useState(id || 0);\n  const [list, error] = GetSelect(listName);\n  const [value, setValue] = useState<string>();\n\n  useEffect(() => {\n    if (itemID === 0 && id) {\n      setItemID(id);\n    }\n    if (list[0].id !== 0) {\n      list.unshift({ id: 0, name: '' });\n    }\n    if (!id && id === 0) {\n      setValue('');\n    } else {\n      const currentItem = list.find((item) => item.id === id);\n      setValue(currentItem?.name || '');\n    }\n  }, [list, id, itemID]);\n\n  const currentValue = (): string => {\n    if (opened) {\n      return value || '';\n    }\n    const currentItem = list.find((item) => item.id === itemID);\n    return currentItem?.name || '';\n  };\n\n  const filteredList = (): SelectItem[] => {\n    const inputValue = currentValue();\n\n    if (inputValue.trim().length === 0) {\n      return list;\n    }\n\n    const inputArray = inputValue.split(' ');\n\n    return list.filter(\n      (listItem) =>\n        listItem.name === '' ||\n        inputArray.every((listItemValue: string) =>\n          new RegExp(listItemValue, 'i').exec(listItem.name),\n        ),\n    );\n  };\n\n  return (\n    <div className=\"field\" key={name}>\n      {label && (\n        <label className=\"label\" key=\"SelectLabel\" htmlFor={`select-${name}-id`}>\n          {label}\n        </label>\n      )}\n      <div\n        id={`select-${name}-id`}\n        className={`control is-expanded select is-fullwidth ${icon ? 'has-icons-left' : ''}`}\n        key={`${name}-control`}\n      >\n        <input\n          aria-controls=\"dropdown-menu\"\n          aria-haspopup=\"true\"\n          className={`input ${color ? `is-${color}` : ''}`}\n          name={name}\n          type=\"text\"\n          value={currentValue()}\n          onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n            setValue(event.target.value);\n          }}\n          onFocus={(): void => {\n            setOpened(true);\n          }}\n          onBlur={(): void => {\n            setTimeout(() => setOpened(false), 300);\n          }}\n          key={`${name}-input`}\n        />\n        {icon && (\n          <Icon\n            color={color !== 'primary' ? color : undefined}\n            icon={icon}\n            key=\"SelectIconLeft\"\n            position=\"left\"\n          />\n        )}\n      </div>\n      {!error && opened && (\n        <div className=\"select-box\" key={`${name}-dropdown`}>\n          {filteredList().map((ListItem, index) => (\n            <div\n              className=\"select-item\"\n              key={`${name}-${ListItem.id}`}\n              onMouseDown={(): void => {\n                setItemID(ListItem.id);\n                setValue(ListItem.name);\n                setter(ListItem.id === 0 ? undefined : ListItem.id);\n              }}\n              role=\"row\"\n              tabIndex={index}\n            >\n              {ListItem.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\nimport { ContactShort } from './contact';\nimport { PracticeList } from './practice';\n\nexport type Company = {\n  id: number;\n  name?: string;\n  address?: string;\n  scope_id?: number;\n  note?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  practices?: PracticeList[];\n  contacts?: ContactShort[];\n};\n\nexport const CompanyEmpty: Company = {\n  id: 0,\n};\n\nexport type CompanyList = {\n  id: number;\n  name?: string;\n  address?: string;\n  scope_name?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  practices?: string[];\n};\n\nexport const CompanyIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"company-select\"\n    label=\"Наименование организации\"\n    listName=\"CompanySelect\"\n    id={properties.id}\n    icon=\"building\"\n    setter={properties.setter}\n  />\n);\n\nexport const CompanyNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"company-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование организации\"\n    icon=\"building\"\n  />\n);\n","import React from 'react';\n\nexport const filterArrayString = (values: string[]): string[] => {\n  return values.filter((value: string) => value !== '');\n};\n\nexport const filterArrayNumber = (values: string[]): number[] => {\n  return values.map((value: string) => Number(value)).filter((value: number) => value !== 0);\n};\n\n// export const stringNoNull = (value?: string): string => {\n//   return value || '';\n// };\n\n// export const numberNoNull = (value?: number): number => {\n//   return value || 0;\n// };\n\nexport const addEmptyString = (values?: string[]): string[] => {\n  let list: string[] = [];\n  if (values) {\n    list = values.filter((value) => value !== '');\n  }\n  list.push('');\n  return list;\n};\n\nexport const numberToString = (values?: number[]): string[] => {\n  let list: string[] = [];\n  if (values) {\n    list = values.map((value) => value.toString());\n  }\n  return list;\n};\n\nexport const splitStrings = (items?: string[]): JSX.Element => (\n  <>\n    {items &&\n      items.map((arrayItem: string, index: number) => <div key={`div${index}`}>{arrayItem}</div>)}\n  </>\n);\n\nexport const splitNumbers = (items?: number[]): JSX.Element => (\n  <>\n    {items &&\n      items.map((arrayItem: number, index: number) => <div key={`div${index}`}>{arrayItem}</div>)}\n  </>\n);\n","import React, { ChangeEvent, SetStateAction } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\nimport { useAuthState } from '../services/auth';\nimport { addEmptyString } from '../services/utils';\n\nexport interface ParameterTypes {\n  id: string;\n}\n\nexport type EmailValues = {\n  emails: string[];\n  setter: (value: SetStateAction<string[]>) => void;\n};\n\nexport type PhoneValues = {\n  phones: string[];\n  setter: (value: SetStateAction<string[]>) => void;\n};\n\nexport const EmailInputs = (properties: EmailValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"email-1-input\">\n      Электронный адрес\n    </label>\n    {properties.emails.map((email, index) => (\n      <Input\n        name={`email-${index}-input`}\n        type=\"email\"\n        icon=\"envelope\"\n        key={`email-${index}`}\n        value={email}\n        placeholder=\"Электронный адрес\"\n        onBlur={(event): void => {\n          let values = properties.emails;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const PhoneInputs = (properties: PhoneValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"phone-1-input\">\n      Телефон\n    </label>\n    {properties.phones.map((phone, index) => (\n      <Input\n        name={`phone-${index}-input`}\n        type=\"tel\"\n        icon=\"phone\"\n        key={`phone-${index}`}\n        value={phone.toString()}\n        placeholder=\"Телефон\"\n        onBlur={(event): void => {\n          let values = properties.phones;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const FaxInputs = (properties: PhoneValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"fax-1-input\">\n      Факс\n    </label>\n    {properties.phones.map((fax, index) => (\n      <Input\n        name={`fax-${index}-input`}\n        type=\"tel\"\n        icon=\"fax\"\n        key={`fax-${index}`}\n        value={fax.toString()}\n        placeholder=\"Факс\"\n        onBlur={(event): void => {\n          let values = properties.phones;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const NoteInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"note\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n      properties.setter(event.target.value === '' ? undefined : event.target.value);\n    }}\n    label=\"Заметки\"\n    icon=\"comment\"\n  />\n);\n\nexport const AddressInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"address\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Адрес\"\n    icon=\"address-card\"\n  />\n);\n\nexport const ContactIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"contact\"\n    label=\"Контактное лицо\"\n    listName=\"ContactSelect\"\n    id={properties.id}\n    icon=\"user\"\n    setter={properties.setter}\n  />\n);\n\ninterface FormButtonsValues {\n  del: () => void;\n  send: () => void;\n}\n\nexport const ItemFormButtons = (properties: FormButtonsValues): JSX.Element => {\n  const history = useHistory();\n  const { auth } = useAuthState();\n  const { send, del } = properties;\n\n  const SaveButton = () =>\n    auth.user.role > 4 ? (\n      <div className=\"control\">\n        <button type=\"button\" className=\"button is-info\" onClick={() => send()}>\n          Сохранить\n        </button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  const BackButton = () => (\n    <div className=\"control\">\n      <button type=\"button\" className=\"button\" onClick={() => history.go(-1)}>\n        Закрыть\n      </button>\n    </div>\n  );\n\n  const DeleteButton = () =>\n    auth.user.role > 8 ? (\n      <div className=\"control mla\">\n        <button\n          type=\"button\"\n          className=\"button is-danger\"\n          onClick={() => {\n            if (window.confirm('Вы действительно хотите удалить запись?')) {\n              del();\n            }\n          }}\n        >\n          Удалить\n        </button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  return (\n    <div className=\"field is-grouped\">\n      <SaveButton />\n      <BackButton />\n      <DeleteButton />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n  Certificate,\n  CertificateDateInput,\n  CertificateNumberInput,\n} from '../../models/certificate';\nimport { CompanyIDSelect } from '../../models/company';\nimport { ContactIDSelect } from '../../models/contact';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const CertificateItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [sNumber, setSNumber] = useState<string>();\n  const [contactID, setContactID] = useState<number>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [certDate, setCertDate] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Certificate', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const certificate: Certificate = {\n      id: NumberID,\n      num: sNumber,\n      contact_id: contactID,\n      company_id: companyID,\n      cert_date: certDate,\n      note,\n    };\n\n    SetItem(NumberID, 'Certificate', certificate, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Certificate', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Certificate;\n      setSNumber(data.num);\n      setContactID(data.contact_id);\n      setCompanyID(data.company_id);\n      setCertDate(data.cert_date);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CertificateNumberInput value={sNumber} setter={setSNumber} />\n          <ContactIDSelect id={contactID} setter={setContactID} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <CertificateDateInput value={certDate} setter={setCertDate} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface PaginationProperties {\n  currentPage: number;\n  lastPage: number;\n  setter: (value: number) => void;\n}\n\ninterface ItemProperties {\n  check: boolean;\n  ellipsis?: boolean;\n  index: number;\n  link?: number;\n}\n\nexport const Pagination = (properties: PaginationProperties): JSX.Element => {\n  const { currentPage, lastPage, setter } = properties;\n  const navClasses = `pagination is-rounded is-centered`;\n\n  const Previous = (): JSX.Element =>\n    currentPage > 1 ? (\n      <a\n        className=\"pagination-previous\"\n        href=\"#prev\"\n        key=\"PaginationPrev\"\n        onClick={(): void => setter(currentPage - 1)}\n      >\n        Назад\n      </a>\n    ) : (\n      <button type=\"button\" className=\"pagination-previous\" disabled>\n        Назад\n      </button>\n    );\n\n  const Next = (): JSX.Element =>\n    currentPage < lastPage ? (\n      <a\n        className=\"pagination-next\"\n        href=\"#next\"\n        key=\"PaginationNext\"\n        onClick={(): void => setter(currentPage + 1)}\n      >\n        Далее\n      </a>\n    ) : (\n      <button type=\"button\" className=\"pagination-next\" disabled>\n        Далее\n      </button>\n    );\n\n  const Item = (itemProperties: ItemProperties): JSX.Element => {\n    const { check, index, link, ellipsis } = itemProperties;\n\n    return check ? (\n      <li key={`li${index}`}>\n        {ellipsis ? (\n          <span className=\"pagination-ellipsis\">&hellip;</span>\n        ) : (\n          <a\n            className={link === currentPage ? 'pagination-link is-current' : 'pagination-link'}\n            href=\"#item\"\n            onClick={link === currentPage || !link ? undefined : (): void => setter(link)}\n          >\n            {link}\n          </a>\n        )}\n      </li>\n    ) : (\n      <></>\n    );\n  };\n\n  return (\n    <nav className={navClasses} key=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n      <Previous />\n      <Next />\n      <ul className=\"pagination-list\" key=\"ul\">\n        <Item check={currentPage > 1} index={1} link={1} />\n        <Item check={currentPage > 3} index={2} ellipsis />\n        <Item check={currentPage > 2} index={3} link={currentPage - 1} />\n        <Item check index={4} link={currentPage} />\n        <Item check={currentPage < lastPage - 1} index={5} link={currentPage + 1} />\n        <Item check={currentPage < lastPage - 2} index={6} ellipsis />\n        <Item check={currentPage < lastPage} index={7} link={lastPage} />\n      </ul>\n    </nav>\n  );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthState } from '../services/auth';\nimport { List } from '../services/fetcher';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Pagination } from './pagination';\n\nexport type SData = {\n  data: string;\n  id: number;\n};\n\nexport type PaginateProperties = {\n  currentPage: number;\n  filteredDataLength: number;\n  itemsPerPage: number;\n  setter: (value: number) => void;\n};\n\nexport type DataProperties = {\n  data: List[];\n  search: string;\n};\n\ninterface BarProperties {\n  name: string;\n  setter: (value: string) => void;\n  value: string;\n}\n\ntype State = {\n  currentPage: number;\n  filteredData: List[];\n  filteredDataLength: number;\n  itemsPerPage: number;\n  searchValues: SData[];\n};\n\ntype Action =\n  | { type: 'searchLessThanTwo'; value: List[]; valueLength: number }\n  | { type: 'changeSearch'; value: List[]; search: string }\n  | { type: 'setFilteredData'; value: List[] }\n  | { type: 'setCurrentPage'; value: number }\n  | { type: 'setSearchValues'; value: SData[] }\n  | { type: 'setFilteredDataLength'; value: number };\n\nconst initialArguments = {\n  currentPage: 0,\n  filteredData: [],\n  filteredDataLength: 0,\n  itemsPerPage: 20,\n  searchValues: [],\n};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'searchLessThanTwo':\n      if (state.filteredDataLength !== action.valueLength) {\n        return { ...state, filteredDataLength: action.valueLength, filteredData: action.value };\n      }\n      return state;\n    case 'changeSearch': {\n      const searchArray = action.search.toLowerCase().split(' ');\n      const temporaryFilteredData = action.value.filter((_, index) =>\n        searchArray.every((value: string) => state.searchValues[index].data.includes(value)),\n      );\n      const temporaryFilteredLength = temporaryFilteredData.length;\n      if (temporaryFilteredLength !== state.filteredDataLength) {\n        if (\n          state.currentPage > 1 &&\n          state.currentPage + 1 > Math.ceil(temporaryFilteredLength / state.itemsPerPage)\n        ) {\n          return {\n            ...state,\n            currentPage: Math.ceil(temporaryFilteredLength / state.itemsPerPage) - 1,\n            filteredData: temporaryFilteredData,\n            filteredDataLength: temporaryFilteredLength,\n          };\n        }\n        return {\n          ...state,\n          filteredData: temporaryFilteredData,\n          filteredDataLength: temporaryFilteredLength,\n        };\n      }\n      return state;\n    }\n    case 'setFilteredData':\n      return { ...state, filteredData: action.value };\n    case 'setCurrentPage':\n      return { ...state, currentPage: action.value };\n    case 'setSearchValues':\n      return { ...state, searchValues: action.value };\n    case 'setFilteredDataLength':\n      return { ...state, filteredDataLength: action.value };\n    default:\n      return state;\n  }\n};\n\nexport const Paginate = (properties: PaginateProperties): JSX.Element => {\n  const { filteredDataLength, itemsPerPage, currentPage, setter } = properties;\n  const receiveChildValue = (value: number): void => {\n    setter(value - 1);\n  };\n  return filteredDataLength / itemsPerPage > 2 ? (\n    <Pagination\n      currentPage={currentPage + 1}\n      lastPage={Math.ceil(filteredDataLength / itemsPerPage)}\n      setter={receiveChildValue}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport const Data = (properties: DataProperties): [() => List[], JSX.Element] => {\n  const { data, search } = properties;\n  type TableData = typeof properties.data;\n\n  const [{ filteredData, currentPage, filteredDataLength, itemsPerPage }, dispatch] = useReducer(\n    reducer,\n    initialArguments,\n  );\n\n  const setCurrentPage = (page: number): void => {\n    dispatch({\n      type: 'setCurrentPage',\n      value: page,\n    });\n  };\n\n  useEffect(() => {\n    const sv: SData[] = data.map(\n      (row, index): SData => {\n        const values = Object.values(row);\n        const rowString: string[] = values.map((value) => {\n          if (value && typeof value !== 'number') {\n            if (typeof value === 'string') {\n              return value;\n            }\n            if (Array.isArray(value)) {\n              return value.join('');\n            }\n          }\n          return '';\n        });\n        return { id: index, data: rowString.join('').toLowerCase() };\n      },\n    );\n    dispatch({ type: 'setSearchValues', value: sv });\n    dispatch({ type: 'setFilteredData', value: data });\n    dispatch({ type: 'setFilteredDataLength', value: data.length });\n  }, [data]);\n\n  useEffect(() => {\n    if (search.length < 2) {\n      dispatch({ type: 'searchLessThanTwo', value: data, valueLength: data.length });\n    } else {\n      dispatch({ type: 'changeSearch', value: data, search });\n    }\n  }, [search, data]);\n\n  const paginationData = (): TableData => {\n    return filteredData.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n  };\n\n  return [\n    paginationData,\n    Paginate({\n      currentPage,\n      filteredDataLength,\n      itemsPerPage,\n      setter: setCurrentPage,\n    }),\n  ];\n};\n\nexport const Bar = (properties: BarProperties): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n\n  const CreateButton = () =>\n    auth.user.role > 2 ? (\n      <div className=\"control mb-4\" key=\"TableNewItem\">\n        <Button onClick={() => history.push(`/${properties.name}/0`)}>Создать</Button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  return (\n    <div className=\"field is-grouped\">\n      <CreateButton />\n      <div className=\"control mb-4 is-expanded\" key=\"TableSearch\">\n        <Input\n          className=\"input is-expanded\"\n          name=\"search\"\n          placeholder=\"Поиск\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\n            properties.setter(event.target.value)\n          }\n          value={properties.value}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { CertificateList } from '../../models/certificate';\nimport { GetList } from '../../services/fetcher';\n\nexport const Certificates = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('CertificateList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): CertificateList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((certificate) => (\n        <tr key={`tr${certificate.id}`}>\n          <td\n            onClick={(): void => history.push(`/certificates/${certificate.id}`)}\n            role=\"gridcell\"\n            className=\"link nowrap\"\n          >\n            {certificate.num}\n          </td>\n          <td\n            onClick={(): void => history.push(`/contacts/${certificate.contact_id || 0}`)}\n            role=\"gridcell\"\n            className=\"link\"\n          >\n            {certificate.contact_name}\n          </td>\n          <td\n            onClick={(): void => history.push(`/companies/${certificate.company_id || 0}`)}\n            role=\"gridcell\"\n            className=\"is-hidden-mobile link\"\n          >\n            {certificate.company_name}\n          </td>\n          <td className=\"nowrap\">{certificate.cert_date}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"certificates\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Номер</th>\n            <th>Фамилия Имя Отчество</th>\n            <th className=\"is-hidden-mobile\">Учебно-методический центр</th>\n            <th>Дата</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Company, CompanyNameInput } from '../../models/company';\nimport { ContactShort, ContactShortForm } from '../../models/contact';\nimport {\n  AddressInput,\n  EmailInputs,\n  FaxInputs,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n  PhoneInputs,\n} from '../../models/impersonal';\nimport { PracticeList, PracticeListForm } from '../../models/practice';\nimport { ScopeIDSelect } from '../../models/scope';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\nimport {\n  addEmptyString,\n  filterArrayNumber,\n  filterArrayString,\n  numberToString,\n} from '../../services/utils';\n\nexport const CompanyItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [address, setAddress] = useState<string>();\n  const [scopeID, setScopeID] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const [emails, setEmails] = useState(['']);\n  const [phones, setPhones] = useState(['']);\n  const [faxes, setFaxes] = useState(['']);\n  const [practices, setPractices] = useState<PracticeList[]>([]);\n  const [contacts, setContacts] = useState<ContactShort[]>([]);\n  const item = GetItem('Company', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const company: Company = {\n      id: NumberID,\n      name,\n      address,\n      scope_id: scopeID,\n      note,\n      emails: filterArrayString(emails),\n      phones: filterArrayNumber(phones),\n      faxes: filterArrayNumber(faxes),\n    };\n\n    SetItem(NumberID, 'Company', company, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Company', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Company;\n      setName(data.name);\n      setAddress(data.address);\n      setScopeID(data.scope_id);\n      setNote(data.note);\n      setEmails(addEmptyString(data.emails));\n      setPhones(addEmptyString(numberToString(data.phones)));\n      setFaxes(addEmptyString(numberToString(data.faxes)));\n      setPractices(data.practices || []);\n      setContacts(data.contacts || []);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CompanyNameInput value={name} setter={setName} />\n          <ScopeIDSelect id={scopeID} setter={setScopeID} />\n          <AddressInput value={address} setter={setAddress} />\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EmailInputs emails={emails} setter={setEmails} />\n            </div>\n            <div className=\"column\">\n              <PhoneInputs phones={phones} setter={setPhones} />\n            </div>\n            <div className=\"column\">\n              <FaxInputs phones={faxes} setter={setFaxes} />\n            </div>\n          </div>\n\n          <PracticeListForm practices={practices} />\n          <ContactShortForm contacts={contacts} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { CompanyList } from '../../models/company';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers, splitStrings } from '../../services/utils';\n\nexport const Companies = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('CompanyList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): CompanyList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((company) => (\n        <tr key={`tr${company.id}`}>\n          <td\n            onClick={(): void => history.push(`/companies/${company.id}`)}\n            role=\"gridcell\"\n            className=\"w250 link\"\n          >\n            {company.name}\n          </td>\n          <td className=\"is-hidden-touch w250\">{company.address}</td>\n          <td className=\"is-hidden-mobile w250\">{company.scope_name}</td>\n          <td className=\"w95\">{splitNumbers(company.phones)}</td>\n          <td className=\"is-hidden-touch w95\">{splitNumbers(company.faxes)}</td>\n          <td className=\"is-hidden-touch is-hidden-desktop-only w95\">\n            {splitStrings(company.practices)}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"companies\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование</th>\n            <th className=\"is-hidden-touch w250\">Адрес</th>\n            <th className=\"is-hidden-mobile w250\">Сфера деятельности</th>\n            <th className=\"w95\">Телефоны</th>\n            <th className=\"is-hidden-touch w95\">Факсы</th>\n            <th className=\"is-hidden-touch is-hidden-desktop-only w95\">Тренировки</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport {\n  Contact,\n  ContactBirthdayInput,\n  ContactEducations,\n  ContactNameInput,\n} from '../../models/contact';\nimport { DepartmentIDSelect } from '../../models/department';\nimport {\n  EmailInputs,\n  FaxInputs,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n  PhoneInputs,\n} from '../../models/impersonal';\nimport { PostGoIDSelect, PostIDSelect } from '../../models/post';\nimport { RankIDSelect } from '../../models/rank';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\nimport {\n  addEmptyString,\n  filterArrayNumber,\n  filterArrayString,\n  numberToString,\n} from '../../services/utils';\n\nexport const ContactItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [departmentID, setDepartmentID] = useState<number>();\n  const [postID, setPostID] = useState<number>();\n  const [postGoID, setPostGoID] = useState<number>();\n  const [rankID, setRankID] = useState<number>();\n  const [birthday, setBirthday] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const [emails, setEmails] = useState(['']);\n  const [phones, setPhones] = useState(['']);\n  const [faxes, setFaxes] = useState(['']);\n  const [educations, setEducations] = useState<string[]>([]);\n  const item = GetItem('Contact', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const contact: Contact = {\n      id: NumberID,\n      name,\n      company_id: companyID,\n      department_id: departmentID,\n      post_id: postID,\n      post_go_id: postGoID,\n      rank_id: rankID,\n      birthday,\n      note,\n      emails: filterArrayString(emails),\n      phones: filterArrayNumber(phones),\n      faxes: filterArrayNumber(faxes),\n    };\n\n    SetItem(NumberID, 'Contact', contact, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Contact', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Contact;\n      setName(data.name);\n      setCompanyID(data.company_id);\n      setDepartmentID(data.department_id);\n      setPostID(data.post_id);\n      setPostGoID(data.post_go_id);\n      setRankID(data.rank_id);\n      setBirthday(data.birthday);\n      setNote(data.note);\n      setEmails(addEmptyString(data.emails));\n      setPhones(addEmptyString(numberToString(data.phones)));\n      setFaxes(addEmptyString(numberToString(data.faxes)));\n      setEducations(data.educations || []);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <ContactNameInput value={name} setter={setName} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <PostIDSelect id={postID} setter={setPostID} />\n            </div>\n            <div className=\"column is-half\">\n              <DepartmentIDSelect id={departmentID} setter={setDepartmentID} />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <PostGoIDSelect id={postGoID} setter={setPostGoID} />\n            </div>\n            <div className=\"column is-half\">\n              <RankIDSelect id={rankID} setter={setRankID} />\n            </div>\n          </div>\n\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n              <ContactBirthdayInput value={birthday} setter={setBirthday} />\n            </div>\n          </div>\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EmailInputs emails={emails} setter={setEmails} />\n            </div>\n            <div className=\"column\">\n              <PhoneInputs phones={phones} setter={setPhones} />\n            </div>\n            <div className=\"column\">\n              <FaxInputs phones={faxes} setter={setFaxes} />\n            </div>\n          </div>\n\n          <ContactEducations educations={educations} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { ContactList } from '../../models/contact';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers } from '../../services/utils';\n\nexport const Contacts = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('ContactList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): ContactList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((contact) => (\n        <tr key={`tr${contact.id}`}>\n          <td\n            onClick={(): void => history.push(`/contacts/${contact.id}`)}\n            role=\"gridcell\"\n            className=\"w250 link\"\n          >\n            {contact.name}\n          </td>\n          <td\n            onClick={(): void => history.push(`/companies/${contact.company_id || 0}`)}\n            role=\"gridcell\"\n            className=\"is-hidden-mobile w250 link\"\n          >\n            {contact.company_name}\n          </td>\n          <td className=\"is-hidden-touch w250\">{contact.post_name}</td>\n          <td className=\"w95\">{splitNumbers(contact.phones)}</td>\n          <td className=\"is-hidden-mobile w95\">{splitNumbers(contact.faxes)}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"contacts\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Фамилия Имя Отчество</th>\n            <th className=\"is-hidden-mobile w250\">Организация</th>\n            <th className=\"is-hidden-touch w250\">Должность</th>\n            <th className=\"w95\">Телефоны</th>\n            <th className=\"is-hidden-mobile w95\">Факсы</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Department, DepartmentNameInput } from '../../models/department';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const DepartmentItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Department', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const department: Department = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Department', department, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Department', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Department;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <DepartmentNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { DepartmentList } from '../../models/department';\nimport { GetList } from '../../services/fetcher';\n\nexport const Departments = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('DepartmentList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): DepartmentList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((department) => (\n        <tr\n          key={`tr${department.id}`}\n          onClick={(): void => history.push(`/departments/${department.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{department.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"departments\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование отдела</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n  Education,\n  EducationEndDateInput,\n  EducationNameSelect,\n  EducationStartDateInput,\n} from '../../models/education';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { PostGoIDSelect } from '../../models/post';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const EducationItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [contactID, setContactID] = useState<number>();\n  const [startDate, setStartDate] = useState<string>();\n  const [endDate, setEndDate] = useState<string>();\n  const [postID, setPostID] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Education', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const education: Education = {\n      id: NumberID,\n      contact_id: contactID,\n      start_date: startDate,\n      end_date: endDate,\n      post_id: postID,\n      note,\n    };\n\n    SetItem(NumberID, 'Education', education, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Education', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Education;\n      setContactID(data.contact_id);\n      setStartDate(data.start_date);\n      setEndDate(data.end_date);\n      setPostID(data.post_id);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <EducationNameSelect id={contactID} setter={setContactID} />\n          <PostGoIDSelect id={postID} setter={setPostID} />\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EducationStartDateInput value={startDate} setter={setStartDate} />\n            </div>\n            <div className=\"column\">\n              <EducationEndDateInput value={endDate} setter={setEndDate} />\n            </div>\n          </div>\n\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { EducationList } from '../../models/education';\nimport { GetList } from '../../services/fetcher';\n\nexport const Educations = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('EducationList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): EducationList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((education) => (\n        <tr\n          key={`tr${education.id}`}\n          onClick={(): void => history.push(`/educations/${education.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{education.contact_name}</td>\n          <td className=\"is-hidden-mobile\">{education.post_name}</td>\n          <td>{education.start_str}</td>\n          <td className=\"is-hidden-mobile\">{education.end_str}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"educations\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Полное имя обучаемого</th>\n            <th className=\"is-hidden-mobile\">Должность ГО ЧС</th>\n            <th>Начало обучения</th>\n            <th className=\"is-hidden-mobile\">Конец обучения</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import './index.css';\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { EducationShort } from '../../models/education';\nimport { PracticeShort } from '../../models/practice';\nimport { GetList } from '../../services/fetcher';\n\nconst trClass = (date: string): string => {\n  const m = new Date();\n  const d = new Date(date);\n  if (d < m) {\n    return 'tr-green';\n  }\n  m.setMonth(m.getMonth() + 1);\n  if (d < m) {\n    return 'tr-red';\n  }\n  return 'tr-yellow';\n};\n\nconst tinyDate = (date: string): string => {\n  if (date.length === 10) {\n    return `${date.slice(8, 10)}.${date.slice(5, 7)}.${date.slice(2, 4)}`;\n  }\n  return date;\n};\n\nconst EducationTable = (educations: EducationShort[]): JSX.Element => {\n  const history = useHistory();\n  return (\n    <table className=\"table is-narrow\">\n      <tbody>\n        {educations.map((row) => (\n          <tr key={row.id} className={trClass(row.start_date)}>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/educations/${row.id}`)}\n              role=\"gridcell\"\n            >\n              {tinyDate(row.start_date)}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/contacts/${row.contact_id}`)}\n              role=\"gridcell\"\n            >\n              {row.contact_name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst PracticeTable = (practices: PracticeShort[]): JSX.Element => {\n  const history = useHistory();\n  return (\n    <table className=\"table is-narrow\">\n      <tbody>\n        {practices.map((row) => (\n          <tr key={row.id} className={trClass(row.date_of_practice)}>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/practices/${row.id}`)}\n              role=\"gridcell\"\n            >\n              {tinyDate(row.date_of_practice)}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/kinds/${row.kind_id}`)}\n              role=\"gridcell\"\n            >\n              {row.kind_short_name}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/companies/${row.company_id}`)}\n              role=\"gridcell\"\n            >\n              {row.company_name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport const Home = (): JSX.Element => {\n  const educations = GetList('EducationNear');\n  const practices = GetList('PracticeNear');\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-4\">{EducationTable(educations as EducationShort[])}</div>\n      <div className=\"column is-4 is-offset-4\">{PracticeTable(practices as PracticeShort[])}</div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Kind, KindNameInput, KindShortNameInput } from '../../models/kind';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const KindItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [shortName, setShortName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Kind', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const kind: Kind = {\n      id: NumberID,\n      name,\n      short_name: shortName,\n      note,\n    };\n\n    SetItem(NumberID, 'Kind', kind, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Kind', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Kind;\n      setName(data.name);\n      setShortName(data.short_name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <KindNameInput value={name} setter={setName} />\n          <KindShortNameInput value={shortName} setter={setShortName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { KindList } from '../../models/kind';\nimport { GetList } from '../../services/fetcher';\n\nexport const Kinds = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('KindList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): KindList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((kind) => (\n        <tr\n          key={`tr${kind.id}`}\n          onClick={(): void => history.push(`/kinds/${kind.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{kind.name}</td>\n          <td className=\"w250\">{kind.short_name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"kinds\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Тип тренировки</th>\n            <th>Сокращенное наименование</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { ChangeEvent, FormEvent, KeyboardEvent, useState } from 'react';\n\nimport { FormField } from '../../components/formfield';\nimport { login, useAuthState } from '../../services/auth';\n\nexport const Login = (): JSX.Element => {\n  const { setAuth } = useAuthState();\n  const [name, setName] = useState('');\n  const [pass, setPass] = useState('');\n\n  const submit = (): void => login(name, pass, setAuth);\n\n  const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"container w300\">\n      <form onSubmit={submitHandler}>\n        <div className=\"box mt-4\">\n          <h3 className=\"title is-3\">Авторизация</h3>\n          <FormField\n            name=\"name\"\n            type=\"text\"\n            icon=\"user\"\n            label=\"Имя пользователя\"\n            autocomplete=\"udds-password\"\n            onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n              setName(event.target.value);\n            }}\n          />\n          <FormField\n            name=\"password\"\n            type=\"password\"\n            icon=\"key\"\n            label=\"Пароль\"\n            onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n              setPass(event.target.value);\n            }}\n            onKeyPress={(event: KeyboardEvent<HTMLInputElement>): void => {\n              if (event.key === 'Enter') {\n                submit();\n              }\n            }}\n          />\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"button\" className=\"button\" onClick={() => submit()}>\n                Отправить\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Post, PostGOSwitch, PostNameInput } from '../../models/post';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const PostItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [go, setGo] = useState(false);\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Post', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const post: Post = {\n      id: NumberID,\n      name,\n      go,\n      note,\n    };\n\n    SetItem(NumberID, 'Post', post, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Post', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Post;\n      setName(data.name);\n      setGo(data.go || false);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <PostNameInput value={name} setter={setName} />\n          <PostGOSwitch value={go} setter={setGo} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { PostList } from '../../models/post';\nimport { GetList } from '../../services/fetcher';\n\nexport const Posts = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('PostList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): PostList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((post) => (\n        <tr\n          key={`tr${post.id}`}\n          onClick={(): void => history.push(`/posts/${post.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{post.name}</td>\n          <td className=\"w9\">\n            <input type=\"checkbox\" checked={post.go} readOnly />\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"posts\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Наименование должности</th>\n            <th className=\"w9\">ГО</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { KindIDSelect } from '../../models/kind';\nimport { Practice, PracticeDateInput, PracticeTopicInput } from '../../models/practice';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const PracticeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [kindID, setKindID] = useState<number>();\n  const [topic, setTopic] = useState<string>();\n  const [date, setDate] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Practice', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const practice: Practice = {\n      id: NumberID,\n      company_id: companyID,\n      kind_id: kindID,\n      topic,\n      date_of_practice: date,\n      note,\n    };\n\n    SetItem(NumberID, 'Practice', practice, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Practice', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Practice;\n      setCompanyID(data.company_id);\n      setKindID(data.kind_id);\n      setTopic(data.topic);\n      setDate(data.date_of_practice);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <KindIDSelect id={kindID} setter={setKindID} />\n          <PracticeTopicInput value={topic} setter={setTopic} />\n          <PracticeDateInput value={date} setter={setDate} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { PracticeList } from '../../models/practice';\nimport { GetList } from '../../services/fetcher';\n\nexport const Practices = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('PracticeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): PracticeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((practice) => (\n        <tr\n          key={`tr${practice.id}`}\n          onClick={(): void => history.push(`/practices/${practice.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"nowrap\">{practice.date_str}</td>\n          <td className=\"w250\">{practice.kind_name}</td>\n          <td className=\"w250 is-hidden-mobile\">{practice.company_name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"practices\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"nowrap\">Дата тренировки</th>\n            <th className=\"w250\">Тип тренировки</th>\n            <th className=\"w250 is-hidden-mobile\">Организация</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Rank, RankNameInput } from '../../models/rank';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const RankItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Rank', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const rank: Rank = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Rank', rank, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Rank', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Rank;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <RankNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { RankList } from '../../models/rank';\nimport { GetList } from '../../services/fetcher';\n\nexport const Ranks = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('RankList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): RankList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((rank) => (\n        <tr\n          key={`tr${rank.id}`}\n          onClick={(): void => history.push(`/ranks/${rank.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{rank.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"ranks\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование чина</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Scope, ScopeNameInput } from '../../models/scope';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const ScopeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Scope', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const scope: Scope = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Scope', scope, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Scope', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Scope;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <ScopeNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { ScopeList } from '../../models/scope';\nimport { GetList } from '../../services/fetcher';\n\nexport const Scopes = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('ScopeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): ScopeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((scope) => (\n        <tr\n          key={`tr${scope.id}`}\n          onClick={(): void => history.push(`/scopes/${scope.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{scope.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"scopes\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Сфера деятельности</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport {\n  AddressInput,\n  ContactIDSelect,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n} from '../../models/impersonal';\nimport {\n  Siren,\n  SirenDeskInput,\n  SirenLatitudeInput,\n  SirenLongtitudeInput,\n  SirenNumberIDInput,\n  SirenNumberPassportInput,\n  SirenOwnInput,\n  SirenRadioInput,\n  SirenStageInput,\n} from '../../models/siren';\nimport { SirenTypeIDSelect } from '../../models/sirentype';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const SirenItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [numberID, setNumberID] = useState<number>();\n  const [numberPassport, setNumberPassport] = useState<string>();\n  const [sirenTypeID, setSirenTypeID] = useState<number>();\n  const [address, setAddress] = useState<string>();\n  const [radio, setRadio] = useState<string>();\n  const [desk, setDesk] = useState<string>();\n  const [contactID, setContactID] = useState<number>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [latitude, setLatitude] = useState<string>();\n  const [longitude, setLongitude] = useState<string>();\n  const [stage, setStage] = useState<number>();\n  const [own, setOwn] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Siren', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const siren: Siren = {\n      id: NumberID,\n      num_id: numberID,\n      num_pass: numberPassport,\n      siren_type_id: sirenTypeID,\n      address,\n      radio,\n      desk,\n      contact_id: contactID,\n      company_id: companyID,\n      latitude,\n      longitude,\n      stage,\n      own,\n      note,\n    };\n\n    SetItem(NumberID, 'Siren', siren, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Siren', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Siren;\n      setNumberID(data.num_id);\n      setNumberPassport(data.num_pass);\n      setSirenTypeID(data.siren_type_id);\n      setAddress(data.address);\n      setRadio(data.radio);\n      setDesk(data.desk);\n      setContactID(data.contact_id);\n      setCompanyID(data.company_id);\n      setLatitude(data.latitude);\n      setLongitude(data.longitude);\n      setStage(data.stage);\n      setOwn(data.own);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <SirenNumberIDInput value={numberID} setter={setNumberID} />\n          <SirenNumberPassportInput value={numberPassport} setter={setNumberPassport} />\n          <SirenTypeIDSelect id={sirenTypeID} setter={setSirenTypeID} />\n          <AddressInput value={address} setter={setAddress} />\n          <SirenRadioInput value={radio} setter={setRadio} />\n          <SirenDeskInput value={desk} setter={setDesk} />\n          <ContactIDSelect id={contactID} setter={setContactID} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <SirenLatitudeInput value={latitude} setter={setLatitude} />\n          <SirenLongtitudeInput value={longitude} setter={setLongitude} />\n          <SirenStageInput value={stage} setter={setStage} />\n          <SirenOwnInput value={own} setter={setOwn} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { SirenList } from '../../models/siren';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers } from '../../services/utils';\n\nexport const Sirens = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('SirenList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): SirenList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((siren) => (\n        <tr\n          key={`tr${siren.id}`}\n          onClick={(): void => history.push(`/sirens/${siren.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{siren.siren_type_name}</td>\n          <td className=\"is-hidden-mobile\">{siren.address}</td>\n          <td className=\"is-hidden-touch w250\">{siren.contact_name}</td>\n          <td className=\"w95 nowrap\">{splitNumbers(siren.phones)}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"sirens\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Тип сирены</th>\n            <th className=\"is-hidden-mobile w250\">Адрес</th>\n            <th>Ответственный</th>\n            <th className=\"w95 nowrap\">Телефоны</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { SirenType, SirenTypeNameInput, SirenTypeRadiusInput } from '../../models/sirentype';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const SirenTypeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [radius, setRadius] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('SirenType', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const sirenType: SirenType = {\n      id: NumberID,\n      name,\n      radius,\n      note,\n    };\n\n    SetItem(NumberID, 'SirenType', sirenType, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'SirenType', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as SirenType;\n      setName(data.name);\n      setRadius(data.radius);\n      setNote(data.note);\n    }\n  }, [item, history, status]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <SirenTypeNameInput value={name} setter={setName} />\n          <SirenTypeRadiusInput value={radius} setter={setRadius} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { SirenTypeList } from '../../models/sirentype';\nimport { GetList } from '../../services/fetcher';\n\nexport const SirenTypes = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('SirenTypeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): SirenTypeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((siren_type) => (\n        <tr\n          key={`tr${siren_type.id}`}\n          onClick={(): void => history.push(`/sirentypes/${siren_type.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{siren_type.name}</td>\n          <td>{siren_type.radius}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"sirentypes\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Тип сирены</th>\n            <th>Радиус действия</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { CertificateItem, Certificates } from '../containers/Certificate';\nimport { Companies, CompanyItem } from '../containers/Company';\nimport { ContactItem, Contacts } from '../containers/Contact';\nimport { DepartmentItem, Departments } from '../containers/Department';\nimport { EducationItem, Educations } from '../containers/Education';\nimport { Home } from '../containers/Home';\nimport { KindItem, Kinds } from '../containers/Kind';\nimport { Login } from '../containers/Login';\nimport { PostItem, Posts } from '../containers/Post';\nimport { PracticeItem, Practices } from '../containers/Practice';\nimport { RankItem, Ranks } from '../containers/Rank';\nimport { ScopeItem, Scopes } from '../containers/Scope';\nimport { SirenItem, Sirens } from '../containers/Siren';\nimport { SirenTypeItem, SirenTypes } from '../containers/SirenType';\nimport { useAuthState } from '../services/auth';\n\nexport const Router = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const login = auth.login;\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path={['/', '/home']} component={login ? Home : Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/certificates\" component={login ? Certificates : Login} />\n        <Route exact path=\"/certificates/:id\" component={login ? CertificateItem : Login} />\n        <Route exact path=\"/companies\" component={login ? Companies : Login} />\n        <Route exact path=\"/companies/:id\" component={login ? CompanyItem : Login} />\n        <Route exact path=\"/contacts\" component={login ? Contacts : Login} />\n        <Route exact path=\"/contacts/:id\" component={login ? ContactItem : Login} />\n        <Route exact path=\"/departments\" component={login ? Departments : Login} />\n        <Route exact path=\"/departments/:id\" component={login ? DepartmentItem : Login} />\n        <Route exact path=\"/educations\" component={login ? Educations : Login} />\n        <Route exact path=\"/educations/:id\" component={login ? EducationItem : Login} />\n        <Route exact path=\"/kinds\" component={login ? Kinds : Login} />\n        <Route exact path=\"/kinds/:id\" component={login ? KindItem : Login} />\n        <Route exact path=\"/posts\" component={login ? Posts : Login} />\n        <Route exact path=\"/posts/:id\" component={login ? PostItem : Login} />\n        <Route exact path=\"/practices\" component={login ? Practices : Login} />\n        <Route exact path=\"/practices/:id\" component={login ? PracticeItem : Login} />\n        <Route exact path=\"/ranks\" component={login ? Ranks : Login} />\n        <Route exact path=\"/ranks/:id\" component={login ? RankItem : Login} />\n        <Route exact path=\"/scopes\" component={login ? Scopes : Login} />\n        <Route exact path=\"/scopes/:id\" component={login ? ScopeItem : Login} />\n        <Route exact path=\"/sirens\" component={login ? Sirens : Login} />\n        <Route exact path=\"/sirens/:id\" component={login ? SirenItem : Login} />\n        <Route exact path=\"/sirentypes\" component={login ? SirenTypes : Login} />\n        <Route exact path=\"/sirentypes/:id\" component={login ? SirenTypeItem : Login} />\n      </Switch>\n    </Suspense>\n  );\n};\n","import './rego.css';\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { NavBar } from './components/navbar';\nimport { Router } from './components/routes';\nimport { checkStorage, useAuthState } from './services/auth';\n\nconst Rego = (): JSX.Element => {\n  const { setAuth } = useAuthState();\n  const [checker, setChecker] = useState(false);\n  const [login, setLogin] = useState(false);\n\n  useEffect(() => {\n    checkStorage(setChecker, setLogin);\n  }, []);\n\n  useEffect(() => {\n    if (checker) {\n      setAuth({ type: 'Checked' });\n      if (login) {\n        setAuth({ type: 'SetLogin', data: login });\n      }\n    }\n  }, [checker, login, setAuth]);\n\n  return checker ? (\n    <BrowserRouter>\n      <NavBar />\n      <div className=\"container px-4 py-4\">\n        <Router />\n      </div>\n    </BrowserRouter>\n  ) : (\n    <div>loading...</div>\n  );\n};\n\nexport default Rego;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Rego from './rego';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './services/auth';\n\n// import './index.css';\n\nconst rootNode = document.getElementById('root');\n\nconst App = () => (\n  <React.StrictMode>\n    <AuthProvider>\n      <Rego />\n    </AuthProvider>\n  </React.StrictMode>\n);\n\nReactDOM.render(<App />, rootNode);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}