{"version":3,"sources":["services/auth.tsx","components/button.tsx","components/navbar.tsx","components/datepicker.tsx","components/icon.tsx","components/input.tsx","components/formfield.tsx","models/certificate.tsx","models/contact.tsx","models/department.tsx","models/education.tsx","models/kind.tsx","models/post.tsx","models/practice.tsx","models/rank.tsx","models/scope.tsx","models/siren.tsx","models/sirentype.tsx","services/fetcher.ts","components/select.tsx","models/company.tsx","services/utils.tsx","models/impersonal.tsx","containers/Certificate/item.tsx","components/pagination.tsx","components/table.tsx","containers/Certificate/list.tsx","containers/Company/item.tsx","containers/Company/list.tsx","containers/Contact/item.tsx","containers/Contact/list.tsx","containers/Department/item.tsx","containers/Department/list.tsx","containers/Education/item.tsx","containers/Education/list.tsx","containers/Home/index.tsx","containers/Kind/item.tsx","containers/Kind/list.tsx","containers/Login/index.tsx","containers/Post/item.tsx","containers/Post/list.tsx","containers/Practice/item.tsx","containers/Practice/list.tsx","containers/Rank/item.tsx","containers/Rank/list.tsx","containers/Scope/item.tsx","containers/Scope/list.tsx","containers/Siren/item.tsx","containers/Siren/list.tsx","containers/SirenType/item.tsx","containers/SirenType/list.tsx","components/routes.tsx","rego.tsx","reportWebVitals.ts","index.tsx"],"names":["loginURL","process","REACT_APP_LOGINURL","checkURL","REACT_APP_CHECKURL","initialAuthState","user","role","name","token","login","check","initialSetAuthState","dispatch","AuthContext","createContext","SetAuthContext","getStorage","userStorage","localStorage","getItem","u","JSON","parse","clearStorage","removeItem","reducer","authState","action","type","data","setItem","stringify","AuthProvider","properties","children","initState","useReducer","state","setState","Provider","value","useAuthState","auth","useContext","setAuth","Button","className","disabled","href","onClick","classes","mainItems","link","dropdownItems","NavbarNotLogged","to","MainItems","map","item","activeClassName","setter","NavbarDropdown","NavBarStart","NavbarEnd","BrandBar","open","exact","aria-expanded","aria-label","data-target","aria-hidden","NavBar","useState","setOpen","id","listDate","date","days","getDate","list","i","push","toString","length","listMonth","listYears","currentYear","Date","getFullYear","DatePicker","label","year","setYear","month","setMonth","day","setDay","rawDate","setRawDate","setDate","useEffect","values","split","Number","strdate","undefined","htmlFor","onChange","event","target","onBlur","Icon","color","position","icon","spanClasses","Input","autocomplete","classNameDiv","iconRight","onKeyPress","placeholder","readonly","divClasses","autoComplete","defaultValue","readOnly","defaultProps","FormField","CertificateEmpty","CertificateNumberInput","CertificateDateInput","ContactEmpty","ContactNameInput","ContactBirthdayInput","ContactShortForm","history","useHistory","contacts","contact","index","post_name","ContactIDSelect","listName","ContactEducations","educations","education","DepartmentEmpty","DepartmentIDSelect","DepartmentNameInput","EducationEmpty","EducationNameSelect","EducationStartDateInput","EducationEndDateInput","KindEmpty","KindNameInput","KindShortNameInput","KindIDSelect","PostEmpty","PostIDSelect","PostGoIDSelect","PostNameInput","PostGOSwitch","checked","PracticeEmpty","PracticeListForm","practices","practice","date_str","kind_name","topic","PracticeTopicInput","PracticeDateInput","RankEmpty","RankIDSelect","RankNameInput","ScopeEmpty","ScopeIDSelect","ScopeNameInput","SirenEmpty","SirenNumberIDInput","SirenNumberPassportInput","SirenRadioInput","SirenDeskInput","SirenLatitudeInput","SirenLongtitudeInput","SirenStageInput","SirenOwnInput","SirenTypeEmpty","SirenTypeIDSelect","SirenTypeNameInput","SirenTypeRadiusInput","URL","REACT_APP_JSONURL","GetItem","setData","NumberID","fetch","method","mode","headers","body","then","response","json","jsonData","command","object","Certificate","Company","Contact","Department","Education","Kind","Post","Practice","Rank","Scope","Siren","SirenType","CompanyEmpty","GetList","setList","CertificateList","CompanyList","ContactList","DepartmentList","EducationList","EducationShort","KindList","PostList","PracticeList","PracticeShort","RankList","ScopeList","SirenList","SirenTypeList","SetItem","status","catch","DelItem","Select","opened","setOpened","itemID","setItemID","setSelect","error","setError","SelectItem","GetSelect","setValue","unshift","currentItem","find","currentValue","aria-controls","aria-haspopup","onFocus","setTimeout","inputValue","trim","inputArray","filter","listItem","every","listItemValue","RegExp","exec","filteredList","ListItem","onMouseDown","tabIndex","CompanyIDSelect","CompanyNameInput","filterArrayString","filterArrayNumber","addEmptyString","numberToString","splitNumbers","items","arrayItem","EmailInputs","emails","email","PhoneInputs","phones","phone","FaxInputs","fax","NoteInput","AddressInput","ItemFormButtons","send","del","SaveButton","BackButton","go","DeleteButton","window","confirm","CertificateItem","useParams","sNumber","setSNumber","contactID","setContactID","companyID","setCompanyID","certDate","setCertDate","note","setNote","setStatus","num","contact_id","company_id","cert_date","Pagination","currentPage","lastPage","Previous","Next","Item","itemProperties","ellipsis","initialArguments","filteredData","filteredDataLength","itemsPerPage","searchValues","valueLength","searchArray","search","toLowerCase","temporaryFilteredData","_","includes","temporaryFilteredLength","Math","ceil","Paginate","Data","sv","row","Object","Array","isArray","join","slice","page","Bar","CreateButton","Certificates","setSearch","paginationData","Body","certificate","contact_name","company_name","CompanyItem","setName","address","setAddress","scopeID","setScopeID","setEmails","setPhones","faxes","setFaxes","setPractices","setContacts","scope_id","company","Companies","scope_name","ContactItem","departmentID","setDepartmentID","postID","setPostID","postGoID","setPostGoID","rankID","setRankID","birthday","setBirthday","setEducations","department_id","post_id","post_go_id","rank_id","Contacts","DepartmentItem","Departments","department","EducationItem","startDate","setStartDate","endDate","setEndDate","start_date","end_date","Educations","start_str","end_str","trClass","m","d","getMonth","tinyDate","EducationTable","PracticeTable","date_of_practice","kind_id","kind_short_name","Home","KindItem","shortName","setShortName","short_name","Kinds","kind","Login","pass","setPass","submit","p","btoa","r","t","onSubmit","preventDefault","key","PostItem","setGo","Posts","post","PracticeItem","kindID","setKindID","setTopic","Practices","RankItem","Ranks","rank","ScopeItem","Scopes","scope","SirenItem","numberID","setNumberID","numberPassport","setNumberPassport","sirenTypeID","setSirenTypeID","radio","setRadio","desk","setDesk","latitude","setLatitude","longitude","setLongitude","stage","setStage","own","setOwn","num_id","num_pass","siren_type_id","Sirens","siren","siren_type_name","SirenTypeItem","radius","setRadius","SirenTypes","siren_type","Router","fallback","path","component","Rego","checker","setChecker","setLogin","checkStorage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootNode","document","getElementById","App","StrictMode","ReactDOM","render"],"mappings":"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","file":"static/js/main.00f9a9ac.chunk.js","sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  ReactElement,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useReducer,\n} from 'react';\n\nconst loginURL = process.env.REACT_APP_LOGINURL || '/go/login';\nconst checkURL = process.env.REACT_APP_CHECKURL || '/go/check';\n\nexport type User = {\n  role: number;\n  name: string;\n  token: string;\n};\n\nexport type AuthState = {\n  user: User;\n  login: boolean;\n  check: boolean;\n};\n\nexport interface CJson {\n  r: boolean;\n}\n\nconst initialAuthState: AuthState = {\n  user: { role: 0, name: '', token: '' },\n  login: false,\n  check: false,\n};\n\nexport type ReducerActions =\n  | {\n      type: 'SetAuth';\n      data: AuthState;\n    }\n  | {\n      type: 'ClearAuth';\n    }\n  | {\n      type: 'SetLogin';\n      data: boolean;\n    }\n  | {\n      type: 'Checked';\n    }\n  | {\n      type: 'Unchecked';\n    };\n\ninterface SetAuthState {\n  dispatch: Dispatch<ReducerActions>;\n}\n\ninterface TJson {\n  t: string;\n  r: number;\n}\n\nconst initialSetAuthState: SetAuthState = {\n  dispatch: () => {\n    return true;\n  },\n};\n\nexport const login = (name: string, pass: string, setAuth: Dispatch<ReducerActions>): void => {\n  fetch(loginURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ u: name, p: btoa(pass) }),\n  })\n    .then((response) => response.json())\n    .then((response) => response as TJson)\n    .then((jsonData) => {\n      setAuth({\n        type: 'SetAuth',\n        data: {\n          user: {\n            role: jsonData.r,\n            name,\n            token: jsonData.t,\n          },\n          check: true,\n          login: true,\n        },\n      });\n    });\n};\n\nexport const check = (token: string, role: string): void => {\n  fetch(checkURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ t: token, r: role }),\n  })\n    .then((response) => response.json())\n    .then((response) => response as CJson)\n    .then((jsonData) => {\n      return jsonData.r;\n    });\n};\n\nexport const logout = (): void => {\n  clearStorage();\n};\n\nexport const AuthContext = createContext(initialAuthState);\n\nexport const SetAuthContext = createContext(initialSetAuthState);\n\ninterface AuthProviderProperties {\n  children: ReactNode;\n}\n\nexport const getStorage = (): User => {\n  const userStorage: string | null = localStorage.getItem('user');\n  const user: User = { role: 0, name: '', token: '' };\n  if (userStorage) {\n    const u: User | undefined = JSON.parse(userStorage);\n    if (u) {\n      user.name = u.name;\n      user.role = u.role;\n      user.token = u.token;\n    }\n  }\n  return user;\n};\n\nconst setStorage = (user: User): void => {\n  localStorage.setItem('user', JSON.stringify(user));\n};\n\nconst clearStorage = (): void => {\n  localStorage.removeItem('user');\n};\n\nexport const reducer = (authState: AuthState, action: ReducerActions): AuthState => {\n  switch (action.type) {\n    case 'SetAuth': {\n      setStorage(action.data.user);\n      return {\n        user: action.data.user,\n        login: action.data.login,\n        check: action.data.check,\n      };\n    }\n    case 'ClearAuth': {\n      clearStorage();\n      return {\n        user: { role: 0, name: '', token: '' },\n        login: false,\n        check: true,\n      };\n    }\n    case 'SetLogin': {\n      return {\n        ...authState,\n        login: action.data,\n        check: true,\n      };\n    }\n    case 'Checked': {\n      return {\n        ...authState,\n        check: true,\n      };\n    }\n    case 'Unchecked': {\n      return {\n        ...authState,\n        check: false,\n      };\n    }\n    default:\n      return authState;\n  }\n};\n\nexport const AuthProvider = (properties: AuthProviderProperties): ReactElement => {\n  const { children } = properties;\n\n  const user = getStorage();\n  const initState: AuthState = {\n    user,\n    login: false,\n    check: false,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const setState: SetAuthState = { dispatch };\n\n  // const contentValues = useMemo(\n  //   () => ({\n  //     state,\n  //     dispatch,\n  //   }),\n  //   [state, dispatch],\n  // );\n\n  return (\n    <AuthContext.Provider value={state}>\n      <SetAuthContext.Provider value={setState}>{children}</SetAuthContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\ninterface AuthContextProperties {\n  auth: AuthState;\n  setAuth: Dispatch<ReducerActions>;\n}\n\nexport const useAuthState = (): AuthContextProperties => {\n  const auth = useContext(AuthContext);\n  const setter = useContext(SetAuthContext);\n  return { auth, setAuth: setter.dispatch };\n};\n\nexport const checkStorage = (\n  setChecker: Dispatch<SetStateAction<boolean>>,\n  setLogin: Dispatch<SetStateAction<boolean>>,\n): void => {\n  const user = getStorage();\n\n  fetch(checkURL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{ \"t\": \"${user.token}\", \"r\": ${user.role} }`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as CJson)\n    .then((jsonData) => {\n      if (jsonData.r) {\n        setLogin(true);\n        setChecker(true);\n      } else {\n        setLogin(false);\n        setChecker(true);\n      }\n    });\n};\n","import React, { MouseEvent } from 'react';\n\ninterface ButtonProperties {\n  children?: string;\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: (\n    event: MouseEvent<\n      HTMLAnchorElement | HTMLButtonElement | HTMLInputElement,\n      globalThis.MouseEvent\n    >,\n  ) => void;\n}\n\nexport const Button = (properties: ButtonProperties): JSX.Element => {\n  const { children, className, disabled, href, onClick } = properties;\n  const classes = `button ${className || ''}`;\n\n  return href ? (\n    <a href={href} onClick={onClick} className={classes}>\n      {children}\n    </a>\n  ) : (\n    <button type=\"button\" disabled={disabled} onClick={onClick} className={classes}>\n      {children}\n    </button>\n  );\n};\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useAuthState } from '../services/auth';\nimport { Button } from './button';\n\ninterface Setter {\n  setter: (value: boolean) => void;\n}\n\ninterface OpenState {\n  open: boolean;\n  setter: (value: boolean) => void;\n}\n\nconst mainItems = [\n  { link: '/contacts', name: 'Контакты' },\n  { link: '/companies', name: 'Организации' },\n  { link: '/sirens', name: 'Сирены' },\n];\n\nconst dropdownItems = [\n  { link: '/departments', name: 'Отделы' },\n  { link: '/educations', name: 'Обучение' },\n  { link: '/kinds', name: 'Типы тренировок' },\n  { link: '/posts', name: 'Должности' },\n  { link: '/practices', name: 'Учения' },\n  { link: '/ranks', name: 'Чины' },\n  { link: '/scopes', name: 'Сферы' },\n  { link: '/certificates', name: 'Удостоверения' },\n  { link: '/sirentypes', name: 'Типы сирен' },\n];\n\nconst NavbarNotLogged = (): JSX.Element => (\n  <nav className=\"navbar is-dark\" role=\"navigation\">\n    <div className=\"navbar-brand\">\n      <NavLink className=\"navbar-item\" key=\"NavbarNotLogged\" to=\"/login\">\n        Авторизация\n      </NavLink>\n    </div>\n  </nav>\n);\n\nconst MainItems = (value: Setter): JSX.Element => (\n  <>\n    {mainItems.map((item) => (\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"navbar-item\"\n        to={item.link}\n        key={`main-items-${item.name}`}\n        onClick={() => value.setter(false)}\n      >\n        {item.name}\n      </NavLink>\n    ))}\n  </>\n);\n\nconst NavbarDropdown = (value: Setter): JSX.Element => (\n  <div className=\"navbar-dropdown\" key=\"navbar-dropdown\">\n    {dropdownItems.map((item) => (\n      <NavLink\n        activeClassName=\"is-active\"\n        className=\"navbar-item\"\n        to={item.link}\n        key={`navbar-dropdown-${item.name}`}\n        onClick={() => value.setter(false)}\n      >\n        {item.name}\n      </NavLink>\n    ))}\n  </div>\n);\n\nconst NavBarStart = (value: Setter): JSX.Element => (\n  <div className=\"navbar-start\" key=\"navbar-start\">\n    <MainItems setter={value.setter} />\n    <div className=\"navbar-item has-dropdown is-hoverable\" key=\"dropdown-items\">\n      <a href=\"#directory\" className=\"navbar-link\">\n        Справочники\n      </a>\n      <NavbarDropdown setter={value.setter} />\n    </div>\n  </div>\n);\n\nconst NavbarEnd = (): JSX.Element => {\n  const { auth, setAuth } = useAuthState();\n  return (\n    <div className=\"navbar-end\" key=\"navbar-end\">\n      <div className=\"navbar-item has-dropdown is-hoverable\">\n        <a href=\"#user\" className=\"navbar-link\">\n          {auth.user.name}\n        </a>\n        <div className=\"navbar-dropdown is-right\">\n          <div className=\"navbar-item\">\n            <Button\n              className=\"is-link\"\n              onClick={() => {\n                setAuth({ type: 'ClearAuth' });\n              }}\n            >\n              Выход\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BrandBar = (properties: OpenState): JSX.Element => {\n  const { open, setter } = properties;\n  return (\n    <>\n      <NavLink activeClassName=\"is-active\" className=\"navbar-item\" exact to=\"/\">\n        ЕДДС\n      </NavLink>\n      <a\n        aria-expanded=\"false\"\n        aria-label=\"menu\"\n        className={open ? 'navbar-burger is-active' : 'navbar-burger'}\n        data-target=\"navbarData\"\n        role=\"button\"\n        href=\"#button\"\n        onClick={() => setter(!open)}\n      >\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n      </a>\n    </>\n  );\n};\n\nexport const NavBar = (): JSX.Element => {\n  // const openClassName = (cn: string): string => (open ? `${cn} is-active` : cn);\n  const { auth } = useAuthState();\n  const [open, setOpen] = useState(false);\n\n  return auth.user.role > 0 ? (\n    <nav className=\"navbar is-dark\" role=\"navigation\" aria-label=\"dropdown navigation\">\n      <div className=\"navbar-brand\">\n        <BrandBar open={open} setter={setOpen} />\n      </div>\n      <div id=\"navbarData\" className={open ? 'navbar-menu is-active' : 'navbar-menu'}>\n        <NavBarStart setter={setOpen} />\n        <NavbarEnd />\n      </div>\n    </nav>\n  ) : (\n    <NavbarNotLogged />\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nexport interface DatePickerValues {\n  value?: string;\n  setter: (value?: string) => void;\n}\n\ninterface DatePickerProperties {\n  label?: string;\n  name: string;\n  setter: (value?: string) => void;\n  value?: string;\n}\n\nconst listDate = (date: Date): string[] => {\n  const days = date.getDate();\n  const list = [' '];\n  for (let i = 1; i <= days; i += 1) {\n    list.push(i.toString().length === 1 ? `0${i}` : i.toString());\n  }\n  return list;\n};\n\nconst listMonth = (): string[] => {\n  const list = [' '];\n  for (let i = 1; i < 13; i += 1) {\n    list.push(i.toString().length === 1 ? `0${i}` : i.toString());\n  }\n  return list;\n};\n\nconst listYears = (): string[] => {\n  const currentYear = new Date().getFullYear();\n  const list = [' '];\n  for (let i = currentYear; i > currentYear - 100; i -= 1) {\n    list.push(i.toString());\n  }\n  return list;\n};\n\nexport const DatePicker = (properties: DatePickerProperties): JSX.Element => {\n  const { name, value, setter, label } = properties;\n\n  const [year, setYear] = useState(' ');\n  const [month, setMonth] = useState(' ');\n  const [day, setDay] = useState(' ');\n  const [rawDate, setRawDate] = useState('');\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    if (value && value !== rawDate) {\n      const values = value.split('-');\n      if (values.length === 3) {\n        setRawDate(value);\n        setYear(values[0]);\n        setMonth(values[1]);\n        setDay(values[2]);\n        setDate(new Date(Number(values[0]), Number(values[1]), 0));\n      }\n    }\n  }, [rawDate, value]);\n\n  useEffect(() => {\n    const strdate = `${year}-${month}-${day}`;\n    if (strdate !== rawDate) {\n      setRawDate(strdate);\n      setter(year !== ' ' && month !== ' ' && day !== ' ' ? strdate : undefined);\n    }\n  }, [day, month, setter, rawDate, year]);\n\n  return (\n    <div className=\"field\" key={name}>\n      {label && (\n        <label className=\"label\" key=\"DateLabel\" htmlFor={`datepicker-${name}-id`}>\n          {label}\n        </label>\n      )}\n      <div className=\"field has-addons\" id={`datepicker-${name}-id`}>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={day}\n              key={`${name}day`}\n              onChange={(event) => setDay(event.target.value)}\n              onBlur={(event) => setDay(event.target.value)}\n            >\n              {listDate(date).map((item) => (\n                <option key={`${name}day-${item}`} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={month}\n              key={`${name}month`}\n              onChange={(event) => setMonth(event.target.value)}\n              onBlur={(event) => setMonth(event.target.value)}\n            >\n              {listMonth().map((item) => (\n                <option key={`${name}month-${item}`} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              className=\"select\"\n              value={year}\n              key={`${name}year`}\n              onChange={(event) => setYear(event.target.value)}\n              onBlur={(event) => setYear(event.target.value)}\n            >\n              {listYears().map((item) => (\n                <option key={`${name}year-${item}`} value={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport interface IconProperties {\n  children?: Element;\n  className?: string;\n  color?: 'info' | 'success' | 'warning' | 'danger';\n  icon: string;\n  position?: 'left' | 'right';\n}\n\nexport const Icon = (properties: IconProperties): JSX.Element => {\n  const { children, className, color, position, icon } = properties;\n  const spanClasses = `icon ${className || ''} ${color ? `has-text-${color}` : ''} ${\n    position ? `is-${position}` : ''\n  }`;\n\n  return (\n    <span className={spanClasses}>\n      <i className={`fas fa-${icon}`}>{children}</i>\n    </span>\n  );\n};\n","import React, { ChangeEvent, KeyboardEvent, MouseEvent } from 'react';\n\nimport { Icon } from './icon';\n\nexport interface StringInputProperties {\n  value?: string;\n  setter: (value?: string) => void;\n}\n\nexport interface NumberInputProperties {\n  value?: number;\n  setter: (value?: number) => void;\n}\n\nexport interface BooleanInputProperties {\n  value: boolean;\n  setter: (value: boolean) => void;\n}\n\ninterface InputProperties {\n  autocomplete?: string;\n  className?: string;\n  classNameDiv?: string;\n  disabled?: boolean;\n  icon?: string;\n  iconRight?: string;\n  name: string;\n  onBlur?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onClick?: (event: MouseEvent<HTMLInputElement, globalThis.MouseEvent>) => void;\n  onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  readonly?: boolean;\n  type?: 'text' | 'password' | 'email' | 'tel';\n  value?: number | string;\n}\n\nexport const Input = (properties: InputProperties): JSX.Element => {\n  const {\n    autocomplete,\n    className,\n    classNameDiv,\n    disabled,\n    icon,\n    iconRight,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onKeyPress,\n    placeholder,\n    readonly,\n    type,\n    value,\n  } = properties;\n\n  const divClasses = `control ${classNameDiv || ''} ${icon ? 'has-icons-left' : ''} ${\n    iconRight ? 'has-icons-right' : ''\n  }`;\n\n  return (\n    <div className={divClasses}>\n      <input\n        autoComplete={autocomplete}\n        className={`${className || ''} input`}\n        defaultValue={value}\n        disabled={disabled}\n        id={name}\n        key={name}\n        name={name}\n        onBlur={onBlur}\n        onChange={onChange}\n        onClick={onClick}\n        onKeyPress={onKeyPress}\n        placeholder={placeholder}\n        readOnly={readonly}\n        type={type}\n      />\n      {icon && <Icon position=\"left\" icon={icon} />}\n      {iconRight && <Icon position=\"right\" icon={iconRight} />}\n    </div>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n","import React, { ChangeEvent, KeyboardEvent, MouseEvent } from 'react';\n\nimport { Input } from './input';\n\nexport interface FormFieldProperties {\n  autocomplete?: string;\n  className?: string;\n  disabled?: boolean;\n  icon?: string;\n  iconRight?: string;\n  label?: string;\n  name: string;\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n  onClick?: (event: MouseEvent<HTMLInputElement, globalThis.MouseEvent>) => void;\n  onKeyPress?: (event: KeyboardEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  readonly?: boolean;\n  rounded?: boolean;\n  type?: 'text' | 'password' | 'email' | 'tel';\n  value?: number | string;\n}\n\nexport const FormField = (properties: FormFieldProperties): JSX.Element => {\n  const {\n    autocomplete,\n    className,\n    disabled,\n    icon,\n    iconRight,\n    label,\n    name,\n    onChange,\n    onClick,\n    onKeyPress,\n    placeholder,\n    readonly,\n    type,\n    value,\n  } = properties;\n\n  return (\n    <div className=\"field\">\n      {label && (\n        <label className=\"label\" htmlFor={name}>\n          {label}\n        </label>\n      )}\n      <Input\n        autocomplete={autocomplete}\n        className={className}\n        disabled={disabled}\n        icon={icon}\n        iconRight={iconRight}\n        name={name}\n        onChange={onChange}\n        onClick={onClick}\n        onKeyPress={onKeyPress}\n        placeholder={placeholder}\n        readonly={readonly}\n        type={type}\n        value={value}\n      />\n    </div>\n  );\n};\n\nFormField.defaultProps = {\n  type: 'text',\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\n\nexport type Certificate = {\n  id: number;\n  num?: string;\n  contact_id?: number;\n  company_id?: number;\n  cert_date?: string;\n  note?: string;\n};\n\nexport const CertificateEmpty: Certificate = {\n  id: 0,\n};\n\nexport type CertificateList = {\n  id: number;\n  num?: string;\n  contact_id?: number;\n  contact_name?: string;\n  company_id?: number;\n  company_name?: string;\n  cert_date?: string;\n  note?: string;\n};\n\nexport const CertificateNumberInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"num\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Серийный номер удостоверения\"\n    icon=\"tag\"\n  />\n);\n\nexport const CertificateDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"cert-date\"\n    label=\"Дата выдачи\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport interface ContactShortValues {\n  contacts: ContactShort[];\n}\n\nexport interface ContactEducationsValues {\n  educations: string[];\n}\n\nexport type Contact = {\n  id: number;\n  name?: string;\n  company_id?: number;\n  department_id?: number;\n  post_id?: number;\n  post_go_id?: number;\n  rank_id?: number;\n  birthday?: string;\n  note?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  educations?: string[];\n};\n\nexport const ContactEmpty: Contact = {\n  id: 0,\n};\n\nexport type ContactList = {\n  id: number;\n  name?: string;\n  company_id?: number;\n  company_name?: string;\n  post_name?: string;\n  phones?: number[];\n  faxes?: number[];\n};\n\nexport type ContactShort = {\n  id: number;\n  name?: string;\n  department_name?: string;\n  post_name?: string;\n  post_go_name?: string;\n};\n\nexport const ContactNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    icon=\"user\"\n    label=\"Фамилия Имя Отчество\"\n    name=\"name\"\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    value={properties.value}\n  />\n);\n\nexport const ContactBirthdayInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    label=\"Дата рождения\"\n    name=\"birthday\"\n    setter={properties.setter}\n    value={properties.value}\n  />\n);\n\nexport const ContactShortForm = (properties: ContactShortValues): JSX.Element => {\n  const history = useHistory();\n  return (\n    <div className=\"field\" key=\"contacts\">\n      <label className=\"label\" htmlFor=\"contact-1\">\n        Сотрудники\n      </label>\n      {properties.contacts.map((contact, index) => (\n        <Input\n          className=\"link\"\n          classNameDiv=\"pb-1\"\n          icon=\"user\"\n          key={`contact-${index}`}\n          name={`contact-${index}`}\n          onClick={(): void => history.push(`/contacts/${contact.id}`)}\n          readonly\n          value={`${contact.name || ''} - ${contact.post_name || ''}`}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport const ContactIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    icon=\"user\"\n    id={properties.id}\n    label=\"Фамилия Имя Отчество\"\n    listName=\"ContactSelect\"\n    name=\"contact\"\n    setter={properties.setter}\n  />\n);\n\nexport const ContactEducations = (properties: ContactEducationsValues): JSX.Element =>\n  properties.educations.length > 0 ? (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor=\"education-1-input\">\n        Даты обучения в УМЦ\n      </label>\n      {properties.educations.map((education, index) => (\n        <Input\n          name={`education-${index}-input`}\n          key={`education-${index}`}\n          value={education}\n          classNameDiv=\"pb-1\"\n        />\n      ))}\n    </div>\n  ) : (\n    <></>\n  );\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Department = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const DepartmentEmpty: Department = {\n  id: 0,\n};\n\nexport type DepartmentList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const DepartmentIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"department\"\n    label=\"Отдел\"\n    listName=\"DepartmentSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const DepartmentNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование отдела\"\n    icon=\"tag\"\n  />\n);\n","import React from 'react';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Education = {\n  id: number;\n  contact_id?: number;\n  start_date?: string;\n  end_date?: string;\n  post_id?: number;\n  note?: string;\n};\n\nexport const EducationEmpty: Education = {\n  id: 0,\n};\n\nexport type EducationList = {\n  id: number;\n  contact_id?: number;\n  contact_name?: string;\n  start_date?: string;\n  end_date?: string;\n  start_str?: string;\n  end_str?: string;\n  post_id?: number;\n  post_name?: string;\n  note?: string;\n};\n\nexport type EducationShort = {\n  id: number;\n  contact_id: number;\n  contact_name: string;\n  start_date: string;\n};\n\nexport const EducationNameSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"education-contact-name\"\n    label=\"Полное имя обучаемого\"\n    listName=\"ContactSelect\"\n    id={properties.id}\n    icon=\"user\"\n    setter={properties.setter}\n  />\n);\n\nexport const EducationStartDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"education-start-date\"\n    label=\"Дата начала обучения\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n\nexport const EducationEndDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"education-end-date\"\n    label=\"Дата окончания обучения\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Kind = {\n  id: number;\n  name?: string;\n  short_name?: string;\n  note?: string;\n};\n\nexport const KindEmpty: Kind = {\n  id: 0,\n};\n\nexport type KindList = {\n  id: number;\n  name?: string;\n  short_name?: string;\n  note?: string;\n};\n\nexport const KindNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"kind-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование типа тренировки\"\n    icon=\"tag\"\n  />\n);\n\nexport const KindShortNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"kind-short-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Сокращенное наименование\"\n    icon=\"tag\"\n  />\n);\n\nexport const KindIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"kink-select\"\n    label=\"Тип тренировки\"\n    listName=\"KindSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { BooleanInputProperties, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Post = {\n  id: number;\n  name?: string;\n  go?: boolean;\n  note?: string;\n};\n\nexport const PostEmpty: Post = {\n  id: 0,\n};\n\nexport type PostList = {\n  id: number;\n  name?: string;\n  go?: boolean;\n  note?: string;\n};\n\nexport const PostIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"post\"\n    label=\"Должность\"\n    listName=\"PostSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const PostGoIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"post-go\"\n    label=\"Должность ГО ЧС\"\n    listName=\"PostGoSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const PostNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"post-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование должности\"\n    icon=\"tag\"\n  />\n);\n\nexport const PostGOSwitch = (properties: BooleanInputProperties): JSX.Element => (\n  <div className=\"field\">\n    <div className=\"control\">\n      <label className=\"checkbox\" htmlFor=\"post-go\">\n        <input\n          className=\"checkbox\"\n          type=\"checkbox\"\n          name=\"post-go\"\n          id=\"post-go\"\n          checked={properties.value}\n          onClick={() => properties.setter(!properties.value)}\n        />\n        Должность по гражданской обороне\n      </label>\n    </div>\n  </div>\n);\n","import React, { ChangeEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { DatePicker, DatePickerValues } from '../components/datepicker';\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\n\nexport interface PracticeValues {\n  practices: PracticeList[];\n}\n\nexport type Practice = {\n  id: number;\n  company_id?: number;\n  kind_id?: number;\n  topic?: string;\n  date_of_practice?: string;\n  note?: string;\n};\n\nexport const PracticeEmpty: Practice = {\n  id: 0,\n};\n\nexport type PracticeList = {\n  id: number;\n  company_id?: number;\n  company_name?: string;\n  kind_id?: number;\n  kind_name?: string;\n  kind_short_name?: string;\n  topic?: string;\n  date_of_practice?: string;\n  date_str?: string;\n};\n\nexport type PracticeShort = {\n  id: number;\n  company_id: number;\n  company_name: string;\n  kind_id: number;\n  kind_short_name: string;\n  date_of_practice: string;\n};\n\nexport const PracticeListForm = (properties: PracticeValues): JSX.Element => {\n  const history = useHistory();\n  return properties.practices.length > 0 ? (\n    <div className=\"field\" key=\"practices\">\n      <label className=\"label\" htmlFor=\"practice-1\">\n        Тренировки\n      </label>\n      {properties.practices.map((practice, index) => (\n        <Input\n          name={`practice-${index}`}\n          key={`practice-${index}`}\n          onClick={(): void => history.push(`/practices/${practice.id}`)}\n          value={`${practice.date_str || ''} - ${practice.kind_name || ''} - ${\n            practice.topic || ''\n          }`}\n          readonly\n          classNameDiv=\"pb-1\"\n          className=\"link\"\n        />\n      ))}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport const PracticeTopicInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"practice-topic\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Тема тренировки\"\n    icon=\"tag\"\n  />\n);\n\nexport const PracticeDateInput = (properties: DatePickerValues): JSX.Element => (\n  <DatePicker\n    name=\"practice-date\"\n    label=\"Дата проведения тренировки\"\n    value={properties.value}\n    setter={properties.setter}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Rank = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const RankEmpty: Rank = {\n  id: 0,\n};\n\nexport type RankList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const RankIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    icon=\"tag\"\n    id={properties.id}\n    label=\"Чин\"\n    listName=\"RankSelect\"\n    name=\"rank\"\n    setter={properties.setter}\n  />\n);\n\nexport const RankNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    icon=\"tag\"\n    label=\"Наименование чина\"\n    name=\"name\"\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    value={properties.value}\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type Scope = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const ScopeEmpty: Scope = {\n  id: 0,\n};\n\nexport type ScopeList = {\n  id: number;\n  name?: string;\n  note?: string;\n};\n\nexport const ScopeIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"scope\"\n    label=\"Сфера деятельности\"\n    listName=\"ScopeSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const ScopeNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Сфера деятельности\"\n    icon=\"tag\"\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { NumberInputProperties, StringInputProperties } from '../components/input';\n\nexport type Siren = {\n  id: number;\n  num_id?: number;\n  num_pass?: string;\n  siren_type_id?: number;\n  address?: string;\n  radio?: string;\n  desk?: string;\n  contact_id?: number;\n  company_id?: number;\n  latitude?: string;\n  longitude?: string;\n  stage?: number;\n  own?: string;\n  note?: string;\n};\n\nexport const SirenEmpty: Siren = {\n  id: 0,\n};\n\nexport type SirenList = {\n  id: number;\n  siren_type_name?: string;\n  address?: string;\n  contact_name?: string;\n  phones?: number[];\n};\n\nexport const SirenNumberIDInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_number_id\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Инвентарный номер\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenNumberPassportInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_number_passport\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Номер по паспорту\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenRadioInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_radio\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Радио\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenDeskInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_desk\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Пульт управления\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenLatitudeInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_latitude\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Широта\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenLongtitudeInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_longtitude\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Долгота\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenStageInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_stage\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Этап\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenOwnInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_own\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Собственность\"\n    icon=\"tag\"\n  />\n);\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { NumberInputProperties, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\n\nexport type SirenType = {\n  id: number;\n  name?: string;\n  radius?: number;\n  note?: string;\n};\n\nexport const SirenTypeEmpty: SirenType = {\n  id: 0,\n};\n\nexport type SirenTypeList = {\n  id: number;\n  name?: string;\n  radius?: number;\n  note?: string;\n};\n\nexport const SirenTypeIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"siren_type_id\"\n    label=\"Тип сирены\"\n    listName=\"SirenTypeSelect\"\n    id={properties.id}\n    icon=\"tag\"\n    setter={properties.setter}\n  />\n);\n\nexport const SirenTypeNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_type_name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Тип сирены\"\n    icon=\"tag\"\n  />\n);\n\nexport const SirenTypeRadiusInput = (properties: NumberInputProperties): JSX.Element => (\n  <FormField\n    name=\"siren_type_radius\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(Number(event.target.value))\n    }\n    label=\"Радиус действия\"\n    icon=\"tag\"\n  />\n);\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nimport { Certificate, CertificateEmpty, CertificateList } from '../models/certificate';\nimport { Company, CompanyEmpty, CompanyList } from '../models/company';\nimport { Contact, ContactEmpty, ContactList } from '../models/contact';\nimport { Department, DepartmentEmpty, DepartmentList } from '../models/department';\nimport { Education, EducationEmpty, EducationList, EducationShort } from '../models/education';\nimport { Kind, KindEmpty, KindList } from '../models/kind';\nimport { Post, PostEmpty, PostList } from '../models/post';\nimport { Practice, PracticeEmpty, PracticeList, PracticeShort } from '../models/practice';\nimport { Rank, RankEmpty, RankList } from '../models/rank';\nimport { Scope, ScopeEmpty, ScopeList } from '../models/scope';\nimport { Siren, SirenEmpty, SirenList } from '../models/siren';\nimport { SirenType, SirenTypeEmpty, SirenTypeList } from '../models/sirentype';\nimport { useAuthState } from './auth';\n\nconst URL = process.env.REACT_APP_JSONURL || '/go/json';\n\nexport type SelectItem = {\n  id: number;\n  name: string;\n};\n\nexport type Item =\n  | undefined\n  | Certificate\n  | Company\n  | Contact\n  | Department\n  | Education\n  | Kind\n  | Post\n  | Practice\n  | Rank\n  | Scope\n  | Siren\n  | SirenType;\n\nexport type List =\n  | CertificateList\n  | CompanyList\n  | ContactList\n  | DepartmentList\n  | EducationList\n  | EducationShort\n  | KindList\n  | PostList\n  | PracticeList\n  | PracticeShort\n  | RankList\n  | ScopeList\n  | SirenList\n  | SirenTypeList;\n\ntype JsonListScheme =\n  | undefined\n  | {\n      command: 'Get';\n      name: 'CertificateList';\n      object: { CertificateList: CertificateList[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'CompanyList'; object: { CompanyList: CompanyList[] }; error: string }\n  | { command: 'Get'; name: 'CompanySelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'ContactList'; object: { ContactList: ContactList[] }; error: string }\n  | { command: 'Get'; name: 'ContactSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'DepartmentList';\n      object: { DepartmentList: DepartmentList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'DepartmentSelect';\n      object: { SelectItem: SelectItem[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'EducationList';\n      object: { EducationList: EducationList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'EducationNear';\n      object: { EducationShort: EducationShort[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'KindList'; object: { KindList: KindList[] }; error: string }\n  | { command: 'Get'; name: 'KindSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'PostGoSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'PostList'; object: { PostList: PostList[] }; error: string }\n  | { command: 'Get'; name: 'PostSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'PracticeList';\n      object: { PracticeList: PracticeList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'PracticeNear';\n      object: { PracticeShort: PracticeShort[] };\n      error: string;\n    }\n  | { command: 'Get'; name: 'RankList'; object: { RankList: RankList[] }; error: string }\n  | { command: 'Get'; name: 'RankSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'ScopeList'; object: { ScopeList: ScopeList[] }; error: string }\n  | { command: 'Get'; name: 'ScopeSelect'; object: { SelectItem: SelectItem[] }; error: string }\n  | { command: 'Get'; name: 'SirenList'; object: { SirenList: SirenList[] }; error: string }\n  | {\n      command: 'Get';\n      name: 'SirenTypeList';\n      object: { SirenTypeList: SirenTypeList[] };\n      error: string;\n    }\n  | {\n      command: 'Get';\n      name: 'SirenTypeSelect';\n      object: { SelectItem: SelectItem[] };\n      error: string;\n    };\n\ntype JsonItemScheme =\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Certificate'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Company'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Contact'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Department'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Education'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Kind'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Post'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Practice'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Rank'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Scope'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'Siren'; error: string }\n  | { command: 'Insert' | 'Update' | 'Delete'; name: 'SirenType'; error: string };\n\ntype JsonGetItemScheme =\n  | { command: 'Get'; name: 'Certificate'; object: { Certificate: Certificate }; error: string }\n  | { command: 'Get'; name: 'Company'; object: { Company: Company }; error: string }\n  | { command: 'Get'; name: 'Contact'; object: { Contact: Contact }; error: string }\n  | { command: 'Get'; name: 'Department'; object: { Department: Department }; error: string }\n  | { command: 'Get'; name: 'Education'; object: { Education: Education }; error: string }\n  | { command: 'Get'; name: 'Kind'; object: { Kind: Kind }; error: string }\n  | { command: 'Get'; name: 'Post'; object: { Post: Post }; error: string }\n  | { command: 'Get'; name: 'Practice'; object: { Practice: Practice }; error: string }\n  | { command: 'Get'; name: 'Rank'; object: { Rank: Rank }; error: string }\n  | { command: 'Get'; name: 'Scope'; object: { Scope: Scope }; error: string }\n  | { command: 'Get'; name: 'Siren'; object: { Siren: Siren }; error: string }\n  | { command: 'Get'; name: 'SirenType'; object: { SirenType: SirenType }; error: string };\n\nexport const GetItem = (name: string, id: string): Item => {\n  const { auth } = useAuthState();\n  const [data, setData] = useState<Item>();\n\n  useEffect(() => {\n    const NumberID = Number(id);\n    if (NumberID !== 0) {\n      fetch(URL, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: `{\"command\":{\"Get\":{\"Item\":{\"name\":\"${name}\",\"id\":${NumberID}}}},\"addon\":\"${auth.user.token}\"}`,\n      })\n        .then((response) => response.json())\n        .then((response) => response as JsonGetItemScheme)\n        .then((jsonData) => {\n          if (jsonData?.command === 'Get') {\n            switch (jsonData?.name) {\n              case 'Certificate':\n                setData(jsonData.object.Certificate);\n                break;\n              case 'Company':\n                setData(jsonData.object.Company);\n                break;\n              case 'Contact':\n                setData(jsonData.object.Contact);\n                break;\n              case 'Department':\n                setData(jsonData.object.Department);\n                break;\n              case 'Education':\n                setData(jsonData.object.Education);\n                break;\n              case 'Kind':\n                setData(jsonData.object.Kind);\n                break;\n              case 'Post':\n                setData(jsonData.object.Post);\n                break;\n              case 'Practice':\n                setData(jsonData.object.Practice);\n                break;\n              case 'Rank':\n                setData(jsonData.object.Rank);\n                break;\n              case 'Scope':\n                setData(jsonData.object.Scope);\n                break;\n              case 'Siren':\n                setData(jsonData.object.Siren);\n                break;\n              case 'SirenType':\n                setData(jsonData.object.SirenType);\n                break;\n              // default:\n              //   throw new Error('unknown item');\n            }\n          }\n          // throw new Error('unknown item');\n        });\n    } else {\n      switch (name) {\n        case 'Certificate':\n          setData(CertificateEmpty);\n          break;\n        case 'Company':\n          setData(CompanyEmpty);\n          break;\n        case 'Contact':\n          setData(ContactEmpty);\n          break;\n        case 'Department':\n          setData(DepartmentEmpty);\n          break;\n        case 'Education':\n          setData(EducationEmpty);\n          break;\n        case 'Kind':\n          setData(KindEmpty);\n          break;\n        case 'Post':\n          setData(PostEmpty);\n          break;\n        case 'Practice':\n          setData(PracticeEmpty);\n          break;\n        case 'Rank':\n          setData(RankEmpty);\n          break;\n        case 'Scope':\n          setData(ScopeEmpty);\n          break;\n        case 'Siren':\n          setData(SirenEmpty);\n          break;\n        case 'SirenType':\n          setData(SirenTypeEmpty);\n          break;\n        // default:\n        //   throw new Error('unknown item');\n      }\n    }\n  }, [id, name, auth.user.token]);\n  return data;\n};\n\nexport const GetList = (name: string): List[] => {\n  const { auth } = useAuthState();\n  const [list, setList] = useState<List[]>([]);\n\n  useEffect(() => {\n    fetch(URL, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: `{\"command\":{\"Get\":{\"List\":\"${name}\"}},\"addon\":\"${auth.user.token}\"}`,\n    })\n      .then((response) => response.json())\n      .then((response) => response as JsonListScheme)\n      .then((jsonData) => {\n        if (jsonData?.command === 'Get') {\n          switch (jsonData?.name) {\n            case 'CertificateList':\n              setList(jsonData.object.CertificateList);\n              break;\n            case 'CompanyList':\n              setList(jsonData.object.CompanyList);\n              break;\n            case 'ContactList':\n              setList(jsonData.object.ContactList);\n              break;\n            case 'DepartmentList':\n              setList(jsonData.object.DepartmentList);\n              break;\n            case 'EducationList':\n              setList(jsonData.object.EducationList);\n              break;\n            case 'EducationNear':\n              setList(jsonData.object.EducationShort);\n              break;\n            case 'KindList':\n              setList(jsonData.object.KindList);\n              break;\n            case 'PostList':\n              setList(jsonData.object.PostList);\n              break;\n            case 'PracticeList':\n              setList(jsonData.object.PracticeList);\n              break;\n            case 'PracticeNear':\n              setList(jsonData.object.PracticeShort);\n              break;\n            case 'RankList':\n              setList(jsonData.object.RankList);\n              break;\n            case 'ScopeList':\n              setList(jsonData.object.ScopeList);\n              break;\n            case 'SirenList':\n              setList(jsonData.object.SirenList);\n              break;\n            case 'SirenTypeList':\n              setList(jsonData.object.SirenTypeList);\n              break;\n          }\n        }\n      });\n  }, [name, auth.user.token]);\n\n  return list;\n};\n\nexport const GetSelect = (name: string): [SelectItem[], string] => {\n  const { auth } = useAuthState();\n  const [list, setSelect] = useState<SelectItem[]>([{ id: 0, name: '' }]);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    fetch(URL, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: `{\"command\":{\"Get\":{\"List\":\"${name}\"}},\"addon\":\"${auth.user.token}\"}`,\n    })\n      .then((response) => response.json())\n      .then((response) => response as JsonListScheme)\n      .then((jsonData) => {\n        if (jsonData?.command === 'Get') {\n          switch (jsonData?.name) {\n            case 'CompanySelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'ContactSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'DepartmentSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'KindSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'PostSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'PostGoSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'RankSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'ScopeSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            case 'SirenTypeSelect':\n              jsonData.object.SelectItem.length > 0\n                ? setSelect(jsonData.object.SelectItem)\n                : setSelect([{ id: 0, name: '' }]);\n              break;\n            // default:\n            //   throw new Error('unknown select');\n          }\n          // } else {\n          //   throw new Error('unknown select');\n        }\n      })\n      .catch(() => {\n        return setError('unknown select');\n      });\n  }, [name, auth.user.token]);\n\n  return [list, error];\n};\n\nexport const SetItem = (\n  id: number,\n  name: string,\n  item: Item,\n  status: Dispatch<SetStateAction<boolean>>,\n  token: string,\n): void => {\n  fetch(URL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{ \"command\": { \"${id === 0 ? 'Insert' : 'Update'}\": { \"${name}\": ${JSON.stringify(\n      item,\n    )} } }, \"addon\": \"${token}\" }`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as JsonItemScheme)\n    .then((jsonData) => {\n      const command = id === 0 ? 'Insert' : 'Update';\n      if (jsonData?.command === command && jsonData.name === name) {\n        status(true);\n      }\n      return status(false);\n    })\n    .catch(() => {\n      return status(false);\n    });\n};\n\nexport const DelItem = (\n  id: number,\n  name: string,\n  status: Dispatch<SetStateAction<boolean>>,\n  token: string,\n): void => {\n  fetch(URL, {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: `{\"command\":{\"Delete\":{\"name\":\"${name}\",\"id\":${id}}},\"addon\":\"${token}\"}`,\n  })\n    .then((response) => response.json())\n    .then((response) => response as JsonItemScheme)\n    .then((jsonData) => {\n      if (jsonData?.command === 'Delete' && jsonData.name === name) {\n        status(true);\n      }\n      return status(false);\n    })\n    .catch(() => {\n      return status(false);\n    });\n};\n","import './select.css';\n\nimport React, { ChangeEvent, useEffect, useState } from 'react';\n\nimport { GetSelect, SelectItem } from '../services/fetcher';\nimport { Icon } from './icon';\n\nexport interface SelectValues {\n  id?: number;\n  setter: (event?: number) => void;\n}\n\ninterface SelectProperties {\n  color?: 'primary' | 'info' | 'success' | 'warning' | 'danger';\n  icon?: string;\n  id?: number;\n  label?: string;\n  listName: string;\n  name: string;\n  setter: (event?: number) => void;\n}\n\nexport const Select = (properties: SelectProperties): JSX.Element => {\n  const { name, id, label, icon, color, listName, setter } = properties;\n\n  const [opened, setOpened] = useState(false);\n  const [itemID, setItemID] = useState(id || 0);\n  const [list, error] = GetSelect(listName);\n  const [value, setValue] = useState<string>();\n\n  useEffect(() => {\n    if (itemID === 0 && id) {\n      setItemID(id);\n    }\n    if (list[0].id !== 0) {\n      list.unshift({ id: 0, name: '' });\n    }\n    if (!id && id === 0) {\n      setValue('');\n    } else {\n      const currentItem = list.find((item) => item.id === id);\n      setValue(currentItem?.name || '');\n    }\n  }, [list, id, itemID]);\n\n  const currentValue = (): string => {\n    if (opened) {\n      return value || '';\n    }\n    const currentItem = list.find((item) => item.id === itemID);\n    return currentItem?.name || '';\n  };\n\n  const filteredList = (): SelectItem[] => {\n    const inputValue = currentValue();\n\n    if (inputValue.trim().length === 0) {\n      return list;\n    }\n\n    const inputArray = inputValue.split(' ');\n\n    return list.filter(\n      (listItem) =>\n        listItem.name === '' ||\n        inputArray.every((listItemValue: string) =>\n          new RegExp(listItemValue, 'i').exec(listItem.name),\n        ),\n    );\n  };\n\n  return (\n    <div className=\"field\" key={name}>\n      {label && (\n        <label className=\"label\" key=\"SelectLabel\" htmlFor={`select-${name}-id`}>\n          {label}\n        </label>\n      )}\n      <div\n        id={`select-${name}-id`}\n        className={`control is-expanded select is-fullwidth ${icon ? 'has-icons-left' : ''}`}\n        key={`${name}-control`}\n      >\n        <input\n          aria-controls=\"dropdown-menu\"\n          aria-haspopup=\"true\"\n          className={`input ${color ? `is-${color}` : ''}`}\n          name={name}\n          type=\"text\"\n          value={currentValue()}\n          onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n            setValue(event.target.value);\n          }}\n          onFocus={(): void => {\n            setOpened(true);\n          }}\n          onBlur={(): void => {\n            setTimeout(() => setOpened(false), 300);\n          }}\n          key={`${name}-input`}\n        />\n        {icon && (\n          <Icon\n            color={color !== 'primary' ? color : undefined}\n            icon={icon}\n            key=\"SelectIconLeft\"\n            position=\"left\"\n          />\n        )}\n      </div>\n      {!error && opened && (\n        <div className=\"select-box\" key={`${name}-dropdown`}>\n          {filteredList().map((ListItem, index) => (\n            <div\n              className=\"select-item\"\n              key={`${name}-${ListItem.id}`}\n              onMouseDown={(): void => {\n                setItemID(ListItem.id);\n                setValue(ListItem.name);\n                setter(ListItem.id === 0 ? undefined : ListItem.id);\n              }}\n              role=\"row\"\n              tabIndex={index}\n            >\n              {ListItem.name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { ChangeEvent } from 'react';\n\nimport { FormField } from '../components/formfield';\nimport { StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\nimport { ContactShort } from './contact';\nimport { PracticeList } from './practice';\n\nexport type Company = {\n  id: number;\n  name?: string;\n  address?: string;\n  scope_id?: number;\n  note?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  practices?: PracticeList[];\n  contacts?: ContactShort[];\n};\n\nexport const CompanyEmpty: Company = {\n  id: 0,\n};\n\nexport type CompanyList = {\n  id: number;\n  name?: string;\n  address?: string;\n  scope_name?: string;\n  emails?: string[];\n  phones?: number[];\n  faxes?: number[];\n  practices?: string[];\n};\n\nexport const CompanyIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"company-select\"\n    label=\"Наименование организации\"\n    listName=\"CompanySelect\"\n    id={properties.id}\n    icon=\"building\"\n    setter={properties.setter}\n  />\n);\n\nexport const CompanyNameInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"company-name\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Наименование организации\"\n    icon=\"building\"\n  />\n);\n","import React from 'react';\n\nexport const filterArrayString = (values: string[]): string[] => {\n  return values.filter((value: string) => value !== '');\n};\n\nexport const filterArrayNumber = (values: string[]): number[] => {\n  return values.map((value: string) => Number(value)).filter((value: number) => value !== 0);\n};\n\n// export const stringNoNull = (value?: string): string => {\n//   return value || '';\n// };\n\n// export const numberNoNull = (value?: number): number => {\n//   return value || 0;\n// };\n\nexport const addEmptyString = (values?: string[]): string[] => {\n  let list: string[] = [];\n  if (values) {\n    list = values.filter((value) => value !== '');\n  }\n  list.push('');\n  return list;\n};\n\nexport const numberToString = (values?: number[]): string[] => {\n  let list: string[] = [];\n  if (values) {\n    list = values.map((value) => value.toString());\n  }\n  return list;\n};\n\nexport const splitStrings = (items?: string[]): JSX.Element => (\n  <>\n    {items &&\n      items.map((arrayItem: string, index: number) => <div key={`div${index}`}>{arrayItem}</div>)}\n  </>\n);\n\nexport const splitNumbers = (items?: number[]): JSX.Element => (\n  <>\n    {items &&\n      items.map((arrayItem: number, index: number) => <div key={`div${index}`}>{arrayItem}</div>)}\n  </>\n);\n","import React, { ChangeEvent, SetStateAction } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FormField } from '../components/formfield';\nimport { Input, StringInputProperties } from '../components/input';\nimport { Select, SelectValues } from '../components/select';\nimport { useAuthState } from '../services/auth';\nimport { addEmptyString } from '../services/utils';\n\nexport interface ParameterTypes {\n  id: string;\n}\n\nexport type EmailValues = {\n  emails: string[];\n  setter: (value: SetStateAction<string[]>) => void;\n};\n\nexport type PhoneValues = {\n  phones: string[];\n  setter: (value: SetStateAction<string[]>) => void;\n};\n\nexport const EmailInputs = (properties: EmailValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"email-1-input\">\n      Электронный адрес\n    </label>\n    {properties.emails.map((email, index) => (\n      <Input\n        name={`email-${index}-input`}\n        type=\"email\"\n        icon=\"envelope\"\n        key={`email-${index}`}\n        value={email}\n        placeholder=\"Электронный адрес\"\n        onBlur={(event): void => {\n          let values = properties.emails;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const PhoneInputs = (properties: PhoneValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"phone-1-input\">\n      Телефон\n    </label>\n    {properties.phones.map((phone, index) => (\n      <Input\n        name={`phone-${index}-input`}\n        type=\"tel\"\n        icon=\"phone\"\n        key={`phone-${index}`}\n        value={phone.toString()}\n        placeholder=\"Телефон\"\n        onBlur={(event): void => {\n          let values = properties.phones;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const FaxInputs = (properties: PhoneValues): JSX.Element => (\n  <div className=\"field\">\n    <label className=\"label\" htmlFor=\"fax-1-input\">\n      Факс\n    </label>\n    {properties.phones.map((fax, index) => (\n      <Input\n        name={`fax-${index}-input`}\n        type=\"tel\"\n        icon=\"fax\"\n        key={`fax-${index}`}\n        value={fax.toString()}\n        placeholder=\"Факс\"\n        onBlur={(event): void => {\n          let values = properties.phones;\n          values[index] = event.target.value;\n          values = addEmptyString(values);\n          properties.setter(values);\n        }}\n        classNameDiv=\"pb-1\"\n      />\n    ))}\n  </div>\n);\n\nexport const NoteInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"note\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n      properties.setter(event.target.value === '' ? undefined : event.target.value);\n    }}\n    label=\"Заметки\"\n    icon=\"comment\"\n  />\n);\n\nexport const AddressInput = (properties: StringInputProperties): JSX.Element => (\n  <FormField\n    name=\"address\"\n    value={properties.value}\n    onChange={(event: ChangeEvent<HTMLInputElement>): void =>\n      properties.setter(event.target.value === '' ? undefined : event.target.value)\n    }\n    label=\"Адрес\"\n    icon=\"address-card\"\n  />\n);\n\nexport const ContactIDSelect = (properties: SelectValues): JSX.Element => (\n  <Select\n    name=\"contact\"\n    label=\"Контактное лицо\"\n    listName=\"ContactSelect\"\n    id={properties.id}\n    icon=\"user\"\n    setter={properties.setter}\n  />\n);\n\ninterface FormButtonsValues {\n  del: () => void;\n  send: () => void;\n}\n\nexport const ItemFormButtons = (properties: FormButtonsValues): JSX.Element => {\n  const history = useHistory();\n  const { auth } = useAuthState();\n  const { send, del } = properties;\n\n  const SaveButton = () =>\n    auth.user.role > 4 ? (\n      <div className=\"control\">\n        <button type=\"button\" className=\"button is-info\" onClick={() => send()}>\n          Сохранить\n        </button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  const BackButton = () => (\n    <div className=\"control\">\n      <button type=\"button\" className=\"button\" onClick={() => history.go(-1)}>\n        Закрыть\n      </button>\n    </div>\n  );\n\n  const DeleteButton = () =>\n    auth.user.role > 8 ? (\n      <div className=\"control mla\">\n        <button\n          type=\"button\"\n          className=\"button is-danger\"\n          onClick={() => {\n            if (window.confirm('Вы действительно хотите удалить запись?')) {\n              del();\n            }\n          }}\n        >\n          Удалить\n        </button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  return (\n    <div className=\"field is-grouped\">\n      <SaveButton />\n      <BackButton />\n      <DeleteButton />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n  Certificate,\n  CertificateDateInput,\n  CertificateNumberInput,\n} from '../../models/certificate';\nimport { CompanyIDSelect } from '../../models/company';\nimport { ContactIDSelect } from '../../models/contact';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const CertificateItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [sNumber, setSNumber] = useState<string>();\n  const [contactID, setContactID] = useState<number>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [certDate, setCertDate] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Certificate', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const certificate: Certificate = {\n      id: NumberID,\n      num: sNumber,\n      contact_id: contactID,\n      company_id: companyID,\n      cert_date: certDate,\n      note,\n    };\n\n    SetItem(NumberID, 'Certificate', certificate, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Certificate', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Certificate;\n      setSNumber(data.num);\n      setContactID(data.contact_id);\n      setCompanyID(data.company_id);\n      setCertDate(data.cert_date);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CertificateNumberInput value={sNumber} setter={setSNumber} />\n          <ContactIDSelect id={contactID} setter={setContactID} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <CertificateDateInput value={certDate} setter={setCertDate} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface PaginationProperties {\n  currentPage: number;\n  lastPage: number;\n  setter: (value: number) => void;\n}\n\ninterface ItemProperties {\n  check: boolean;\n  ellipsis?: boolean;\n  index: number;\n  link?: number;\n}\n\nexport const Pagination = (properties: PaginationProperties): JSX.Element => {\n  const { currentPage, lastPage, setter } = properties;\n  const navClasses = `pagination is-rounded is-centered`;\n\n  const Previous = (): JSX.Element =>\n    currentPage > 1 ? (\n      <a\n        className=\"pagination-previous\"\n        href=\"#prev\"\n        key=\"PaginationPrev\"\n        onClick={(): void => setter(currentPage - 1)}\n      >\n        Назад\n      </a>\n    ) : (\n      <button type=\"button\" className=\"pagination-previous\" disabled>\n        Назад\n      </button>\n    );\n\n  const Next = (): JSX.Element =>\n    currentPage < lastPage ? (\n      <a\n        className=\"pagination-next\"\n        href=\"#next\"\n        key=\"PaginationNext\"\n        onClick={(): void => setter(currentPage + 1)}\n      >\n        Далее\n      </a>\n    ) : (\n      <button type=\"button\" className=\"pagination-next\" disabled>\n        Далее\n      </button>\n    );\n\n  const Item = (itemProperties: ItemProperties): JSX.Element => {\n    const { check, index, link, ellipsis } = itemProperties;\n\n    return check ? (\n      <li key={`li${index}`}>\n        {ellipsis ? (\n          <span className=\"pagination-ellipsis\">&hellip;</span>\n        ) : (\n          <a\n            className={link === currentPage ? 'pagination-link is-current' : 'pagination-link'}\n            href=\"#item\"\n            onClick={link === currentPage || !link ? undefined : (): void => setter(link)}\n          >\n            {link}\n          </a>\n        )}\n      </li>\n    ) : (\n      <></>\n    );\n  };\n\n  return (\n    <nav className={navClasses} key=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n      <Previous />\n      <Next />\n      <ul className=\"pagination-list\" key=\"ul\">\n        <Item check={currentPage > 1} index={1} link={1} />\n        <Item check={currentPage > 3} index={2} ellipsis />\n        <Item check={currentPage > 2} index={3} link={currentPage - 1} />\n        <Item check index={4} link={currentPage} />\n        <Item check={currentPage < lastPage - 1} index={5} link={currentPage + 1} />\n        <Item check={currentPage < lastPage - 2} index={6} ellipsis />\n        <Item check={currentPage < lastPage} index={7} link={lastPage} />\n      </ul>\n    </nav>\n  );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useAuthState } from '../services/auth';\nimport { List } from '../services/fetcher';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Pagination } from './pagination';\n\nexport type SData = {\n  data: string;\n  id: number;\n};\n\nexport type PaginateProperties = {\n  currentPage: number;\n  filteredDataLength: number;\n  itemsPerPage: number;\n  setter: (value: number) => void;\n};\n\nexport type DataProperties = {\n  data: List[];\n  search: string;\n};\n\ninterface BarProperties {\n  name: string;\n  setter: (value: string) => void;\n  value: string;\n}\n\ntype State = {\n  currentPage: number;\n  filteredData: List[];\n  filteredDataLength: number;\n  itemsPerPage: number;\n  searchValues: SData[];\n};\n\ntype Action =\n  | { type: 'searchLessThanTwo'; value: List[]; valueLength: number }\n  | { type: 'changeSearch'; value: List[]; search: string }\n  | { type: 'setFilteredData'; value: List[] }\n  | { type: 'setCurrentPage'; value: number }\n  | { type: 'setSearchValues'; value: SData[] }\n  | { type: 'setFilteredDataLength'; value: number };\n\nconst initialArguments = {\n  currentPage: 0,\n  filteredData: [],\n  filteredDataLength: 0,\n  itemsPerPage: 20,\n  searchValues: [],\n};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'searchLessThanTwo':\n      if (state.filteredDataLength !== action.valueLength) {\n        return { ...state, filteredDataLength: action.valueLength, filteredData: action.value };\n      }\n      return state;\n    case 'changeSearch': {\n      const searchArray = action.search.toLowerCase().split(' ');\n      const temporaryFilteredData = action.value.filter((_, index) =>\n        searchArray.every((value: string) => state.searchValues[index].data.includes(value)),\n      );\n      const temporaryFilteredLength = temporaryFilteredData.length;\n      if (temporaryFilteredLength !== state.filteredDataLength) {\n        if (\n          state.currentPage > 1 &&\n          state.currentPage + 1 > Math.ceil(temporaryFilteredLength / state.itemsPerPage)\n        ) {\n          return {\n            ...state,\n            currentPage: Math.ceil(temporaryFilteredLength / state.itemsPerPage) - 1,\n            filteredData: temporaryFilteredData,\n            filteredDataLength: temporaryFilteredLength,\n          };\n        }\n        return {\n          ...state,\n          filteredData: temporaryFilteredData,\n          filteredDataLength: temporaryFilteredLength,\n        };\n      }\n      return state;\n    }\n    case 'setFilteredData':\n      return { ...state, filteredData: action.value };\n    case 'setCurrentPage':\n      return { ...state, currentPage: action.value };\n    case 'setSearchValues':\n      return { ...state, searchValues: action.value };\n    case 'setFilteredDataLength':\n      return { ...state, filteredDataLength: action.value };\n    default:\n      return state;\n  }\n};\n\nexport const Paginate = (properties: PaginateProperties): JSX.Element => {\n  const { filteredDataLength, itemsPerPage, currentPage, setter } = properties;\n  const receiveChildValue = (value: number): void => {\n    setter(value - 1);\n  };\n  return filteredDataLength / itemsPerPage > 2 ? (\n    <Pagination\n      currentPage={currentPage + 1}\n      lastPage={Math.ceil(filteredDataLength / itemsPerPage)}\n      setter={receiveChildValue}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport const Data = (properties: DataProperties): [() => List[], JSX.Element] => {\n  const { data, search } = properties;\n  type TableData = typeof properties.data;\n\n  const [{ filteredData, currentPage, filteredDataLength, itemsPerPage }, dispatch] = useReducer(\n    reducer,\n    initialArguments,\n  );\n\n  const setCurrentPage = (page: number): void => {\n    dispatch({\n      type: 'setCurrentPage',\n      value: page,\n    });\n  };\n\n  useEffect(() => {\n    const sv: SData[] = data.map(\n      (row, index): SData => {\n        const values = Object.values(row);\n        const rowString: string[] = values.map((value) => {\n          if (value && typeof value !== 'number') {\n            if (typeof value === 'string') {\n              return value;\n            }\n            if (Array.isArray(value)) {\n              return value.join('');\n            }\n          }\n          return '';\n        });\n        return { id: index, data: rowString.join('').toLowerCase() };\n      },\n    );\n    dispatch({ type: 'setSearchValues', value: sv });\n    dispatch({ type: 'setFilteredData', value: data });\n    dispatch({ type: 'setFilteredDataLength', value: data.length });\n  }, [data]);\n\n  useEffect(() => {\n    if (search.length < 2) {\n      dispatch({ type: 'searchLessThanTwo', value: data, valueLength: data.length });\n    } else {\n      dispatch({ type: 'changeSearch', value: data, search });\n    }\n  }, [search, data]);\n\n  const paginationData = (): TableData => {\n    return filteredData.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n  };\n\n  return [\n    paginationData,\n    Paginate({\n      currentPage,\n      filteredDataLength,\n      itemsPerPage,\n      setter: setCurrentPage,\n    }),\n  ];\n};\n\nexport const Bar = (properties: BarProperties): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n\n  const CreateButton = () =>\n    auth.user.role > 2 ? (\n      <div className=\"control mb-4\" key=\"TableNewItem\">\n        <Button onClick={() => history.push(`/${properties.name}/0`)}>Создать</Button>\n      </div>\n    ) : (\n      <></>\n    );\n\n  return (\n    <div className=\"field is-grouped\">\n      <CreateButton />\n      <div className=\"control mb-4 is-expanded\" key=\"TableSearch\">\n        <Input\n          className=\"input is-expanded\"\n          name=\"search\"\n          placeholder=\"Поиск\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>): void =>\n            properties.setter(event.target.value)\n          }\n          value={properties.value}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { CertificateList } from '../../models/certificate';\nimport { GetList } from '../../services/fetcher';\n\nexport const Certificates = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('CertificateList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): CertificateList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((certificate) => (\n        <tr key={`tr${certificate.id}`}>\n          <td\n            onClick={(): void => history.push(`/certificates/${certificate.id}`)}\n            role=\"gridcell\"\n            className=\"link nowrap\"\n          >\n            {certificate.num}\n          </td>\n          <td\n            onClick={(): void => history.push(`/contacts/${certificate.contact_id || 0}`)}\n            role=\"gridcell\"\n            className=\"link\"\n          >\n            {certificate.contact_name}\n          </td>\n          <td\n            onClick={(): void => history.push(`/companies/${certificate.company_id || 0}`)}\n            role=\"gridcell\"\n            className=\"is-hidden-mobile link\"\n          >\n            {certificate.company_name}\n          </td>\n          <td className=\"nowrap\">{certificate.cert_date}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"certificates\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Номер</th>\n            <th>Фамилия Имя Отчество</th>\n            <th className=\"is-hidden-mobile\">Учебно-методический центр</th>\n            <th>Дата</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Company, CompanyNameInput } from '../../models/company';\nimport { ContactShort, ContactShortForm } from '../../models/contact';\nimport {\n  AddressInput,\n  EmailInputs,\n  FaxInputs,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n  PhoneInputs,\n} from '../../models/impersonal';\nimport { PracticeList, PracticeListForm } from '../../models/practice';\nimport { ScopeIDSelect } from '../../models/scope';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\nimport {\n  addEmptyString,\n  filterArrayNumber,\n  filterArrayString,\n  numberToString,\n} from '../../services/utils';\n\nexport const CompanyItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [address, setAddress] = useState<string>();\n  const [scopeID, setScopeID] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const [emails, setEmails] = useState(['']);\n  const [phones, setPhones] = useState(['']);\n  const [faxes, setFaxes] = useState(['']);\n  const [practices, setPractices] = useState<PracticeList[]>([]);\n  const [contacts, setContacts] = useState<ContactShort[]>([]);\n  const item = GetItem('Company', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const company: Company = {\n      id: NumberID,\n      name,\n      address,\n      scope_id: scopeID,\n      note,\n      emails: filterArrayString(emails),\n      phones: filterArrayNumber(phones),\n      faxes: filterArrayNumber(faxes),\n    };\n\n    SetItem(NumberID, 'Company', company, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Company', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Company;\n      setName(data.name);\n      setAddress(data.address);\n      setScopeID(data.scope_id);\n      setNote(data.note);\n      setEmails(addEmptyString(data.emails));\n      setPhones(addEmptyString(numberToString(data.phones)));\n      setFaxes(addEmptyString(numberToString(data.faxes)));\n      setPractices(data.practices || []);\n      setContacts(data.contacts || []);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CompanyNameInput value={name} setter={setName} />\n          <ScopeIDSelect id={scopeID} setter={setScopeID} />\n          <AddressInput value={address} setter={setAddress} />\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EmailInputs emails={emails} setter={setEmails} />\n            </div>\n            <div className=\"column\">\n              <PhoneInputs phones={phones} setter={setPhones} />\n            </div>\n            <div className=\"column\">\n              <FaxInputs phones={faxes} setter={setFaxes} />\n            </div>\n          </div>\n\n          <PracticeListForm practices={practices} />\n          <ContactShortForm contacts={contacts} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { CompanyList } from '../../models/company';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers, splitStrings } from '../../services/utils';\n\nexport const Companies = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('CompanyList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): CompanyList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((company) => (\n        <tr key={`tr${company.id}`}>\n          <td\n            onClick={(): void => history.push(`/companies/${company.id}`)}\n            role=\"gridcell\"\n            className=\"w250 link\"\n          >\n            {company.name}\n          </td>\n          <td className=\"is-hidden-touch w250\">{company.address}</td>\n          <td className=\"is-hidden-mobile w250\">{company.scope_name}</td>\n          <td className=\"w95\">{splitNumbers(company.phones)}</td>\n          <td className=\"is-hidden-touch w95\">{splitNumbers(company.faxes)}</td>\n          <td className=\"is-hidden-touch is-hidden-desktop-only w95\">\n            {splitStrings(company.practices)}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"companies\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование</th>\n            <th className=\"is-hidden-touch w250\">Адрес</th>\n            <th className=\"is-hidden-mobile w250\">Сфера деятельности</th>\n            <th className=\"w95\">Телефоны</th>\n            <th className=\"is-hidden-touch w95\">Факсы</th>\n            <th className=\"is-hidden-touch is-hidden-desktop-only w95\">Тренировки</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport {\n  Contact,\n  ContactBirthdayInput,\n  ContactEducations,\n  ContactNameInput,\n} from '../../models/contact';\nimport { DepartmentIDSelect } from '../../models/department';\nimport {\n  EmailInputs,\n  FaxInputs,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n  PhoneInputs,\n} from '../../models/impersonal';\nimport { PostGoIDSelect, PostIDSelect } from '../../models/post';\nimport { RankIDSelect } from '../../models/rank';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\nimport {\n  addEmptyString,\n  filterArrayNumber,\n  filterArrayString,\n  numberToString,\n} from '../../services/utils';\n\nexport const ContactItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [departmentID, setDepartmentID] = useState<number>();\n  const [postID, setPostID] = useState<number>();\n  const [postGoID, setPostGoID] = useState<number>();\n  const [rankID, setRankID] = useState<number>();\n  const [birthday, setBirthday] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const [emails, setEmails] = useState(['']);\n  const [phones, setPhones] = useState(['']);\n  const [faxes, setFaxes] = useState(['']);\n  const [educations, setEducations] = useState<string[]>([]);\n  const item = GetItem('Contact', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const contact: Contact = {\n      id: NumberID,\n      name,\n      company_id: companyID,\n      department_id: departmentID,\n      post_id: postID,\n      post_go_id: postGoID,\n      rank_id: rankID,\n      birthday,\n      note,\n      emails: filterArrayString(emails),\n      phones: filterArrayNumber(phones),\n      faxes: filterArrayNumber(faxes),\n    };\n\n    SetItem(NumberID, 'Contact', contact, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Contact', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Contact;\n      setName(data.name);\n      setCompanyID(data.company_id);\n      setDepartmentID(data.department_id);\n      setPostID(data.post_id);\n      setPostGoID(data.post_go_id);\n      setRankID(data.rank_id);\n      setBirthday(data.birthday);\n      setNote(data.note);\n      setEmails(addEmptyString(data.emails));\n      setPhones(addEmptyString(numberToString(data.phones)));\n      setFaxes(addEmptyString(numberToString(data.faxes)));\n      setEducations(data.educations || []);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <ContactNameInput value={name} setter={setName} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <PostIDSelect id={postID} setter={setPostID} />\n            </div>\n            <div className=\"column is-half\">\n              <DepartmentIDSelect id={departmentID} setter={setDepartmentID} />\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <PostGoIDSelect id={postGoID} setter={setPostGoID} />\n            </div>\n            <div className=\"column is-half\">\n              <RankIDSelect id={rankID} setter={setRankID} />\n            </div>\n          </div>\n\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n              <ContactBirthdayInput value={birthday} setter={setBirthday} />\n            </div>\n          </div>\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EmailInputs emails={emails} setter={setEmails} />\n            </div>\n            <div className=\"column\">\n              <PhoneInputs phones={phones} setter={setPhones} />\n            </div>\n            <div className=\"column\">\n              <FaxInputs phones={faxes} setter={setFaxes} />\n            </div>\n          </div>\n\n          <ContactEducations educations={educations} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { ContactList } from '../../models/contact';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers } from '../../services/utils';\n\nexport const Contacts = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('ContactList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): ContactList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((contact) => (\n        <tr key={`tr${contact.id}`}>\n          <td\n            onClick={(): void => history.push(`/contacts/${contact.id}`)}\n            role=\"gridcell\"\n            className=\"w250 link\"\n          >\n            {contact.name}\n          </td>\n          <td\n            onClick={(): void => history.push(`/companies/${contact.company_id || 0}`)}\n            role=\"gridcell\"\n            className=\"is-hidden-mobile w250 link\"\n          >\n            {contact.company_name}\n          </td>\n          <td className=\"is-hidden-touch w250\">{contact.post_name}</td>\n          <td className=\"w95\">{splitNumbers(contact.phones)}</td>\n          <td className=\"is-hidden-mobile w95\">{splitNumbers(contact.faxes)}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"contacts\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Фамилия Имя Отчество</th>\n            <th className=\"is-hidden-mobile w250\">Организация</th>\n            <th className=\"is-hidden-touch w250\">Должность</th>\n            <th className=\"w95\">Телефоны</th>\n            <th className=\"is-hidden-mobile w95\">Факсы</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { Department, DepartmentNameInput } from '../../models/department';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const DepartmentItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Department', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const department: Department = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Department', department, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Department', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Department;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <DepartmentNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { DepartmentList } from '../../models/department';\nimport { GetList } from '../../services/fetcher';\n\nexport const Departments = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('DepartmentList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): DepartmentList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((department) => (\n        <tr\n          key={`tr${department.id}`}\n          onClick={(): void => history.push(`/departments/${department.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{department.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"departments\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование отдела</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n  Education,\n  EducationEndDateInput,\n  EducationNameSelect,\n  EducationStartDateInput,\n} from '../../models/education';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { PostGoIDSelect } from '../../models/post';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const EducationItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [contactID, setContactID] = useState<number>();\n  const [startDate, setStartDate] = useState<string>();\n  const [endDate, setEndDate] = useState<string>();\n  const [postID, setPostID] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Education', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const education: Education = {\n      id: NumberID,\n      contact_id: contactID,\n      start_date: startDate,\n      end_date: endDate,\n      post_id: postID,\n      note,\n    };\n\n    SetItem(NumberID, 'Education', education, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Education', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Education;\n      setContactID(data.contact_id);\n      setStartDate(data.start_date);\n      setEndDate(data.end_date);\n      setPostID(data.post_id);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <EducationNameSelect id={contactID} setter={setContactID} />\n          <PostGoIDSelect id={postID} setter={setPostID} />\n\n          <div className=\"columns\">\n            <div className=\"column\">\n              <EducationStartDateInput value={startDate} setter={setStartDate} />\n            </div>\n            <div className=\"column\">\n              <EducationEndDateInput value={endDate} setter={setEndDate} />\n            </div>\n          </div>\n\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { EducationList } from '../../models/education';\nimport { GetList } from '../../services/fetcher';\n\nexport const Educations = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('EducationList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): EducationList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((education) => (\n        <tr\n          key={`tr${education.id}`}\n          onClick={(): void => history.push(`/educations/${education.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{education.contact_name}</td>\n          <td className=\"is-hidden-mobile\">{education.post_name}</td>\n          <td>{education.start_str}</td>\n          <td className=\"is-hidden-mobile\">{education.end_str}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"educations\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Полное имя обучаемого</th>\n            <th className=\"is-hidden-mobile\">Должность ГО ЧС</th>\n            <th>Начало обучения</th>\n            <th className=\"is-hidden-mobile\">Конец обучения</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import './index.css';\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { EducationShort } from '../../models/education';\nimport { PracticeShort } from '../../models/practice';\nimport { GetList } from '../../services/fetcher';\n\nconst trClass = (date: string): string => {\n  const m = new Date();\n  const d = new Date(date);\n  if (d < m) {\n    return 'tr-green';\n  }\n  m.setMonth(m.getMonth() + 1);\n  if (d < m) {\n    return 'tr-red';\n  }\n  return 'tr-yellow';\n};\n\nconst tinyDate = (date: string): string => {\n  if (date.length === 10) {\n    return `${date.slice(8, 10)}.${date.slice(5, 7)}.${date.slice(2, 4)}`;\n  }\n  return date;\n};\n\nconst EducationTable = (educations: EducationShort[]): JSX.Element => {\n  const history = useHistory();\n  return (\n    <table className=\"table is-narrow\">\n      <tbody>\n        {educations.map((row) => (\n          <tr key={row.id} className={trClass(row.start_date)}>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/educations/${row.id}`)}\n              role=\"gridcell\"\n            >\n              {tinyDate(row.start_date)}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/contacts/${row.contact_id}`)}\n              role=\"gridcell\"\n            >\n              {row.contact_name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst PracticeTable = (practices: PracticeShort[]): JSX.Element => {\n  const history = useHistory();\n  return (\n    <table className=\"table is-narrow\">\n      <tbody>\n        {practices.map((row) => (\n          <tr key={row.id} className={trClass(row.date_of_practice)}>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/practices/${row.id}`)}\n              role=\"gridcell\"\n            >\n              {tinyDate(row.date_of_practice)}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/kinds/${row.kind_id}`)}\n              role=\"gridcell\"\n            >\n              {row.kind_short_name}\n            </td>\n            <td\n              className=\"has-text-black\"\n              onMouseDown={(): void => history.push(`/companies/${row.company_id}`)}\n              role=\"gridcell\"\n            >\n              {row.company_name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport const Home = (): JSX.Element => {\n  const educations = GetList('EducationNear');\n  const practices = GetList('PracticeNear');\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-4\">{EducationTable(educations as EducationShort[])}</div>\n      <div className=\"column is-4 is-offset-4\">{PracticeTable(practices as PracticeShort[])}</div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Kind, KindNameInput, KindShortNameInput } from '../../models/kind';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const KindItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [shortName, setShortName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Kind', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const kind: Kind = {\n      id: NumberID,\n      name,\n      short_name: shortName,\n      note,\n    };\n\n    SetItem(NumberID, 'Kind', kind, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Kind', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Kind;\n      setName(data.name);\n      setShortName(data.short_name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <KindNameInput value={name} setter={setName} />\n          <KindShortNameInput value={shortName} setter={setShortName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { KindList } from '../../models/kind';\nimport { GetList } from '../../services/fetcher';\n\nexport const Kinds = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('KindList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): KindList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((kind) => (\n        <tr\n          key={`tr${kind.id}`}\n          onClick={(): void => history.push(`/kinds/${kind.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{kind.name}</td>\n          <td className=\"w250\">{kind.short_name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"kinds\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Тип тренировки</th>\n            <th>Сокращенное наименование</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { ChangeEvent, FormEvent, KeyboardEvent, useState } from 'react';\n\nimport { FormField } from '../../components/formfield';\nimport { login, useAuthState } from '../../services/auth';\n\nexport const Login = (): JSX.Element => {\n  const { setAuth } = useAuthState();\n  const [name, setName] = useState('');\n  const [pass, setPass] = useState('');\n\n  const submit = (): void => login(name, pass, setAuth);\n\n  const submitHandler = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"container w300\">\n      <form onSubmit={submitHandler}>\n        <div className=\"box mt-4\">\n          <h3 className=\"title is-3\">Авторизация</h3>\n          <FormField\n            name=\"name\"\n            type=\"text\"\n            icon=\"user\"\n            label=\"Имя пользователя\"\n            autocomplete=\"udds-password\"\n            onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n              setName(event.target.value);\n            }}\n          />\n          <FormField\n            name=\"password\"\n            type=\"password\"\n            icon=\"key\"\n            label=\"Пароль\"\n            onChange={(event: ChangeEvent<HTMLInputElement>): void => {\n              setPass(event.target.value);\n            }}\n            onKeyPress={(event: KeyboardEvent<HTMLInputElement>): void => {\n              if (event.key === 'Enter') {\n                submit();\n              }\n            }}\n          />\n          <div className=\"field\">\n            <div className=\"control\">\n              <button type=\"button\" className=\"button\" onClick={() => submit()}>\n                Отправить\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Post, PostGOSwitch, PostNameInput } from '../../models/post';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const PostItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [go, setGo] = useState(false);\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Post', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const post: Post = {\n      id: NumberID,\n      name,\n      go,\n      note,\n    };\n\n    SetItem(NumberID, 'Post', post, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Post', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Post;\n      setName(data.name);\n      setGo(data.go || false);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <PostNameInput value={name} setter={setName} />\n          <PostGOSwitch value={go} setter={setGo} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { PostList } from '../../models/post';\nimport { GetList } from '../../services/fetcher';\n\nexport const Posts = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('PostList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): PostList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((post) => (\n        <tr\n          key={`tr${post.id}`}\n          onClick={(): void => history.push(`/posts/${post.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{post.name}</td>\n          <td className=\"w9\">\n            <input type=\"checkbox\" checked={post.go} readOnly />\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"posts\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Наименование должности</th>\n            <th className=\"w9\">ГО</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { KindIDSelect } from '../../models/kind';\nimport { Practice, PracticeDateInput, PracticeTopicInput } from '../../models/practice';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const PracticeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [kindID, setKindID] = useState<number>();\n  const [topic, setTopic] = useState<string>();\n  const [date, setDate] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Practice', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const practice: Practice = {\n      id: NumberID,\n      company_id: companyID,\n      kind_id: kindID,\n      topic,\n      date_of_practice: date,\n      note,\n    };\n\n    SetItem(NumberID, 'Practice', practice, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Practice', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Practice;\n      setCompanyID(data.company_id);\n      setKindID(data.kind_id);\n      setTopic(data.topic);\n      setDate(data.date_of_practice);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <KindIDSelect id={kindID} setter={setKindID} />\n          <PracticeTopicInput value={topic} setter={setTopic} />\n          <PracticeDateInput value={date} setter={setDate} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { PracticeList } from '../../models/practice';\nimport { GetList } from '../../services/fetcher';\n\nexport const Practices = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('PracticeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): PracticeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((practice) => (\n        <tr\n          key={`tr${practice.id}`}\n          onClick={(): void => history.push(`/practices/${practice.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"nowrap\">{practice.date_str}</td>\n          <td className=\"w250\">{practice.kind_name}</td>\n          <td className=\"w250 is-hidden-mobile\">{practice.company_name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"practices\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"nowrap\">Дата тренировки</th>\n            <th className=\"w250\">Тип тренировки</th>\n            <th className=\"w250 is-hidden-mobile\">Организация</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Rank, RankNameInput } from '../../models/rank';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const RankItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Rank', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const rank: Rank = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Rank', rank, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Rank', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Rank;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <RankNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { RankList } from '../../models/rank';\nimport { GetList } from '../../services/fetcher';\n\nexport const Ranks = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('RankList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): RankList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((rank) => (\n        <tr\n          key={`tr${rank.id}`}\n          onClick={(): void => history.push(`/ranks/${rank.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{rank.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"ranks\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Наименование чина</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { Scope, ScopeNameInput } from '../../models/scope';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const ScopeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Scope', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const scope: Scope = {\n      id: NumberID,\n      name,\n      note,\n    };\n\n    SetItem(NumberID, 'Scope', scope, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Scope', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Scope;\n      setName(data.name);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <ScopeNameInput value={name} setter={setName} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { ScopeList } from '../../models/scope';\nimport { GetList } from '../../services/fetcher';\n\nexport const Scopes = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('ScopeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): ScopeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((scope) => (\n        <tr\n          key={`tr${scope.id}`}\n          onClick={(): void => history.push(`/scopes/${scope.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{scope.name}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"scopes\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Сфера деятельности</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { CompanyIDSelect } from '../../models/company';\nimport {\n  AddressInput,\n  ContactIDSelect,\n  ItemFormButtons,\n  NoteInput,\n  ParameterTypes,\n} from '../../models/impersonal';\nimport {\n  Siren,\n  SirenDeskInput,\n  SirenLatitudeInput,\n  SirenLongtitudeInput,\n  SirenNumberIDInput,\n  SirenNumberPassportInput,\n  SirenOwnInput,\n  SirenRadioInput,\n  SirenStageInput,\n} from '../../models/siren';\nimport { SirenTypeIDSelect } from '../../models/sirentype';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const SirenItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [numberID, setNumberID] = useState<number>();\n  const [numberPassport, setNumberPassport] = useState<string>();\n  const [sirenTypeID, setSirenTypeID] = useState<number>();\n  const [address, setAddress] = useState<string>();\n  const [radio, setRadio] = useState<string>();\n  const [desk, setDesk] = useState<string>();\n  const [contactID, setContactID] = useState<number>();\n  const [companyID, setCompanyID] = useState<number>();\n  const [latitude, setLatitude] = useState<string>();\n  const [longitude, setLongitude] = useState<string>();\n  const [stage, setStage] = useState<number>();\n  const [own, setOwn] = useState<string>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('Siren', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const siren: Siren = {\n      id: NumberID,\n      num_id: numberID,\n      num_pass: numberPassport,\n      siren_type_id: sirenTypeID,\n      address,\n      radio,\n      desk,\n      contact_id: contactID,\n      company_id: companyID,\n      latitude,\n      longitude,\n      stage,\n      own,\n      note,\n    };\n\n    SetItem(NumberID, 'Siren', siren, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'Siren', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as Siren;\n      setNumberID(data.num_id);\n      setNumberPassport(data.num_pass);\n      setSirenTypeID(data.siren_type_id);\n      setAddress(data.address);\n      setRadio(data.radio);\n      setDesk(data.desk);\n      setContactID(data.contact_id);\n      setCompanyID(data.company_id);\n      setLatitude(data.latitude);\n      setLongitude(data.longitude);\n      setStage(data.stage);\n      setOwn(data.own);\n      setNote(data.note);\n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <SirenNumberIDInput value={numberID} setter={setNumberID} />\n          <SirenNumberPassportInput value={numberPassport} setter={setNumberPassport} />\n          <SirenTypeIDSelect id={sirenTypeID} setter={setSirenTypeID} />\n          <AddressInput value={address} setter={setAddress} />\n          <SirenRadioInput value={radio} setter={setRadio} />\n          <SirenDeskInput value={desk} setter={setDesk} />\n          <ContactIDSelect id={contactID} setter={setContactID} />\n          <CompanyIDSelect id={companyID} setter={setCompanyID} />\n          <SirenLatitudeInput value={latitude} setter={setLatitude} />\n          <SirenLongtitudeInput value={longitude} setter={setLongitude} />\n          <SirenStageInput value={stage} setter={setStage} />\n          <SirenOwnInput value={own} setter={setOwn} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { SirenList } from '../../models/siren';\nimport { GetList } from '../../services/fetcher';\nimport { splitNumbers } from '../../services/utils';\n\nexport const Sirens = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('SirenList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): SirenList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((siren) => (\n        <tr\n          key={`tr${siren.id}`}\n          onClick={(): void => history.push(`/sirens/${siren.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td className=\"w250\">{siren.siren_type_name}</td>\n          <td className=\"is-hidden-mobile\">{siren.address}</td>\n          <td className=\"is-hidden-touch w250\">{siren.contact_name}</td>\n          <td className=\"w95 nowrap\">{splitNumbers(siren.phones)}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"sirens\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th className=\"w250\">Тип сирены</th>\n            <th className=\"is-hidden-mobile w250\">Адрес</th>\n            <th>Ответственный</th>\n            <th className=\"w95 nowrap\">Телефоны</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { ItemFormButtons, NoteInput, ParameterTypes } from '../../models/impersonal';\nimport { SirenType, SirenTypeNameInput, SirenTypeRadiusInput } from '../../models/sirentype';\nimport { useAuthState } from '../../services/auth';\nimport { DelItem, GetItem, SetItem } from '../../services/fetcher';\n\nexport const SirenTypeItem = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const history = useHistory();\n  const { id } = useParams<ParameterTypes>();\n  const [name, setName] = useState<string>();\n  const [radius, setRadius] = useState<number>();\n  const [note, setNote] = useState<string>();\n  const item = GetItem('SirenType', id);\n  const [status, setStatus] = useState(false);\n\n  const send = (): void => {\n    const NumberID = Number(id);\n    const sirenType: SirenType = {\n      id: NumberID,\n      name,\n      radius,\n      note,\n    };\n\n    SetItem(NumberID, 'SirenType', sirenType, setStatus, auth.user.token);\n  };\n\n  const del = (): void => {\n    const NumberID = Number(id);\n    DelItem(NumberID, 'SirenType', setStatus, auth.user.token);\n  };\n\n  useEffect(() => {\n    if (item) {\n      const data = item as SirenType;\n      setName(data.name);\n      setRadius(data.radius);\n      setNote(data.note);\n    }\n  }, [item, history, status]);\n\n  useEffect(() => {\n    if (status) {\n      history.go(-1);\n    }\n  }, [history, status]);\n\n  return (\n    <div>\n      {item && (\n        <>\n          <SirenTypeNameInput value={name} setter={setName} />\n          <SirenTypeRadiusInput value={radius} setter={setRadius} />\n          <NoteInput value={note} setter={setNote} />\n\n          <ItemFormButtons send={send} del={del} />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Bar, Data } from '../../components/table';\nimport { SirenTypeList } from '../../models/sirentype';\nimport { GetList } from '../../services/fetcher';\n\nexport const SirenTypes = (): JSX.Element => {\n  const history = useHistory();\n  const data = GetList('SirenTypeList');\n  const [search, setSearch] = useState('');\n\n  const [paginationData, Paginate] = Data({\n    data,\n    search,\n  });\n\n  const tableData = (): SirenTypeList[] => {\n    return paginationData();\n  };\n\n  const Body = (): JSX.Element => (\n    <>\n      {tableData().map((siren_type) => (\n        <tr\n          key={`tr${siren_type.id}`}\n          onClick={(): void => history.push(`/sirentypes/${siren_type.id}`)}\n          role=\"gridcell\"\n          className=\"link\"\n        >\n          <td>{siren_type.name}</td>\n          <td>{siren_type.radius}</td>\n        </tr>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Bar value={search} setter={setSearch} name=\"sirentypes\" />\n      <table className=\"table is-narrow is-fullwidth\">\n        <tbody>\n          <tr>\n            <th>Тип сирены</th>\n            <th>Радиус действия</th>\n          </tr>\n          <Body />\n        </tbody>\n      </table>\n      {Paginate}\n    </>\n  );\n};\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { CertificateItem, Certificates } from '../containers/Certificate';\nimport { Companies, CompanyItem } from '../containers/Company';\nimport { ContactItem, Contacts } from '../containers/Contact';\nimport { DepartmentItem, Departments } from '../containers/Department';\nimport { EducationItem, Educations } from '../containers/Education';\nimport { Home } from '../containers/Home';\nimport { KindItem, Kinds } from '../containers/Kind';\nimport { Login } from '../containers/Login';\nimport { PostItem, Posts } from '../containers/Post';\nimport { PracticeItem, Practices } from '../containers/Practice';\nimport { RankItem, Ranks } from '../containers/Rank';\nimport { ScopeItem, Scopes } from '../containers/Scope';\nimport { SirenItem, Sirens } from '../containers/Siren';\nimport { SirenTypeItem, SirenTypes } from '../containers/SirenType';\nimport { useAuthState } from '../services/auth';\n\nexport const Router = (): JSX.Element => {\n  const { auth } = useAuthState();\n  const login = auth.login;\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path={['/', '/home']} component={login ? Home : Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/certificates\" component={login ? Certificates : Login} />\n        <Route exact path=\"/certificates/:id\" component={login ? CertificateItem : Login} />\n        <Route exact path=\"/companies\" component={login ? Companies : Login} />\n        <Route exact path=\"/companies/:id\" component={login ? CompanyItem : Login} />\n        <Route exact path=\"/contacts\" component={login ? Contacts : Login} />\n        <Route exact path=\"/contacts/:id\" component={login ? ContactItem : Login} />\n        <Route exact path=\"/departments\" component={login ? Departments : Login} />\n        <Route exact path=\"/departments/:id\" component={login ? DepartmentItem : Login} />\n        <Route exact path=\"/educations\" component={login ? Educations : Login} />\n        <Route exact path=\"/educations/:id\" component={login ? EducationItem : Login} />\n        <Route exact path=\"/kinds\" component={login ? Kinds : Login} />\n        <Route exact path=\"/kinds/:id\" component={login ? KindItem : Login} />\n        <Route exact path=\"/posts\" component={login ? Posts : Login} />\n        <Route exact path=\"/posts/:id\" component={login ? PostItem : Login} />\n        <Route exact path=\"/practices\" component={login ? Practices : Login} />\n        <Route exact path=\"/practices/:id\" component={login ? PracticeItem : Login} />\n        <Route exact path=\"/ranks\" component={login ? Ranks : Login} />\n        <Route exact path=\"/ranks/:id\" component={login ? RankItem : Login} />\n        <Route exact path=\"/scopes\" component={login ? Scopes : Login} />\n        <Route exact path=\"/scopes/:id\" component={login ? ScopeItem : Login} />\n        <Route exact path=\"/sirens\" component={login ? Sirens : Login} />\n        <Route exact path=\"/sirens/:id\" component={login ? SirenItem : Login} />\n        <Route exact path=\"/sirentypes\" component={login ? SirenTypes : Login} />\n        <Route exact path=\"/sirentypes/:id\" component={login ? SirenTypeItem : Login} />\n      </Switch>\n    </Suspense>\n  );\n};\n","import './rego.css';\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { NavBar } from './components/navbar';\nimport { Router } from './components/routes';\nimport { checkStorage, useAuthState } from './services/auth';\n\nconst Rego = (): JSX.Element => {\n  const { setAuth } = useAuthState();\n  const [checker, setChecker] = useState(false);\n  const [login, setLogin] = useState(false);\n\n  useEffect(() => {\n    checkStorage(setChecker, setLogin);\n  }, []);\n\n  useEffect(() => {\n    if (checker) {\n      setAuth({ type: 'Checked' });\n      if (login) {\n        setAuth({ type: 'SetLogin', data: login });\n      }\n    }\n  }, [checker, login, setAuth]);\n\n  return checker ? (\n    <BrowserRouter>\n      <NavBar />\n      <div className=\"container px-4 py-4\">\n        <Router />\n      </div>\n    </BrowserRouter>\n  ) : (\n    <div>loading...</div>\n  );\n};\n\nexport default Rego;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Rego from './rego';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './services/auth';\n\n// import './index.css';\n\nconst rootNode = document.getElementById('root');\n\nconst App = () => (\n  <React.StrictMode>\n    <AuthProvider>\n      <Rego />\n    </AuthProvider>\n  </React.StrictMode>\n);\n\nReactDOM.render(<App />, rootNode);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}